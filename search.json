[{"path":"https://cobriniklab.github.io/chevreulProcess/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to chevreulProcess","title":"Contributing to chevreulProcess","text":"outlines propose change chevreul. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to chevreulProcess","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to chevreulProcess","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to chevreulProcess","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"cobriniklab/chevreul\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to chevreulProcess","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to chevreulProcess","text":"Please note chevreul project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 chevreulProcess authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with chevreul","title":"Getting help with chevreul","text":"Thank using chevreul! filing issue, things know make process smooth possible parties.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with chevreul","text":"Start making minimally reproducible example, also known ‘reprex’. may use reprex R package create one, though necessary help. make R-question-asking endeavors easier. Learning use takes 5 10 minutes. tips make minimally reproducible example, see StackOverflow link.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/SUPPORT.html","id":"where-to-post-it","dir":"","previous_headings":"","what":"Where to post it?","title":"Getting help with chevreul","text":"Bioconductor help web page gives overview places may help answer question. Bioconductor software related questions, bug reports feature requests, addressed appropriate Bioconductor/chevreul GitHub repository. Follow bug report feature request templates GitHub. package GitHub repository, see next bullet point. Bioconductor software usage questions addressed Bioconductor Support Website. Make sure use appropriate package tag, otherwise package authors get notification. General R questions can posed StackOverflow RStudio Community website especially pertain tidyverse RStudio GUI related products.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/SUPPORT.html","id":"issues-or-feature-requests","dir":"","previous_headings":"","what":"Issues or Feature Requests","title":"Getting help with chevreul","text":"opening new issue feature request, sure search issues pull requests ensure one already exist implemented development version. Note. can remove :open search term issues page search open closed issues. See link learn modifying search.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with chevreul","text":"Bioconductor maintainers limited resources strive responsive possible. Please forget tag appropriate maintainer issue GitHub username (e.g., @username). order make easy possible Bioconductor core developers remediate issue. Provide accurate, brief, reproducible report outlined issue templates. Thank trusting Bioconductor.","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/chevreulProcess/articles/chevreulProcess.html","id":"install-chevreulprocess","dir":"Articles","previous_headings":"Basics","what":"Install chevreulProcess","title":"chevreulProcess","text":"R open-source statistical environment can easily modified enhance functionality via packages. chevreulProcess R package available via Bioconductor repository packages. R can installed operating system CRAN can install chevreulProcess using following commands R session:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"chevreulProcess\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/articles/chevreulProcess.html","id":"required-knowledge","dir":"Articles","previous_headings":"Basics","what":"Required knowledge","title":"chevreulProcess","text":"chevreulProcess package designed single-cell RNA sequencing data. functions included within package derived packages implemented infrastructure needed RNA-seq data processing analysis. Packages instrumental development chevreulProcess include, Biocpkg(\"SummarizedExperiment\") Biocpkg(\"scater\").","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/articles/chevreulProcess.html","id":"asking-for-help","dir":"Articles","previous_headings":"Basics","what":"Asking for help","title":"chevreulProcess","text":"R Bioconductor steep learning curve critical learn ask help. Bioconductor support site main resource getting help: remember use chevreulProcess tag check older posts.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/articles/chevreulProcess.html","id":"quick-start-to-using-chevreulprocess","dir":"Articles","previous_headings":"","what":"Quick start to using chevreulProcess","title":"chevreulProcess","text":"chevreulProcess package contains functions preprocess, cluster, visualize, perform analyses scRNA-seq data. also contains shiny app easy visualization analysis scRNA data. chvereul uses SingelCellExperiment (SCE) object type (SingleCellExperiment) store expression metadata single-cell experiments. package features functions capable : Performing Clustering range resolutions Dimensional reduction Raw Sequencing Data. Visualizing scRNA data using different plotting functions. Integration multiple datasets consistent analyses. Cell cycle state regression labeling. R session information.","code":"library(\"chevreulProcess\") #> R version 4.5.0 (2025-04-11) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] chevreulProcess_0.99.23     scater_1.36.0               #>  [3] ggplot2_3.5.2               scuttle_1.18.0              #>  [5] SingleCellExperiment_1.30.1 SummarizedExperiment_1.38.1 #>  [7] Biobase_2.68.0              GenomicRanges_1.60.0        #>  [9] GenomeInfoDb_1.44.0         IRanges_2.42.0              #> [11] S4Vectors_0.46.0            BiocGenerics_0.54.0         #> [13] generics_0.1.4              MatrixGenerics_1.20.0       #> [15] matrixStats_1.5.0           BiocStyle_2.36.0            #>  #> loaded via a namespace (and not attached): #>   [1] RColorBrewer_1.1-3        jsonlite_2.0.0            #>   [3] shape_1.4.6.1             magrittr_2.0.3            #>   [5] ggbeeswarm_0.7.2          GenomicFeatures_1.60.0    #>   [7] farver_2.1.2              rmarkdown_2.29            #>   [9] GlobalOptions_0.1.2       fs_1.6.6                  #>  [11] BiocIO_1.18.0             ragg_1.4.0                #>  [13] vctrs_0.6.5               memoise_2.0.1             #>  [15] Rsamtools_2.24.0          DelayedMatrixStats_1.30.0 #>  [17] RCurl_1.98-1.17           htmltools_0.5.8.1         #>  [19] S4Arrays_1.8.1            curl_6.2.3                #>  [21] BiocNeighbors_2.2.0       SparseArray_1.8.0         #>  [23] sass_0.4.10               bslib_0.9.0               #>  [25] desc_1.4.3                cachem_1.1.0              #>  [27] ResidualMatrix_1.18.0     GenomicAlignments_1.44.0  #>  [29] igraph_2.1.4              lifecycle_1.0.4           #>  [31] pkgconfig_2.0.3           rsvd_1.0.5                #>  [33] Matrix_1.7-3              R6_2.6.1                  #>  [35] fastmap_1.2.0             GenomeInfoDbData_1.2.14   #>  [37] digest_0.6.37             colorspace_2.1-1          #>  [39] AnnotationDbi_1.70.0      dqrng_0.4.1               #>  [41] irlba_2.3.5.1             textshaping_1.0.1         #>  [43] RSQLite_2.4.0             beachmat_2.24.0           #>  [45] httr_1.4.7                abind_1.4-8               #>  [47] compiler_4.5.0            bit64_4.6.0-1             #>  [49] withr_3.0.2               BiocParallel_1.42.1       #>  [51] viridis_0.6.5             DBI_1.2.3                 #>  [53] DelayedArray_0.34.1       rjson_0.2.23              #>  [55] bluster_1.18.0            tools_4.5.0               #>  [57] vipor_0.4.7               beeswarm_0.4.0            #>  [59] glue_1.8.0                restfulr_0.0.15           #>  [61] batchelor_1.24.0          grid_4.5.0                #>  [63] cluster_2.1.8.1           megadepth_1.18.0          #>  [65] gtable_0.3.6              tzdb_0.5.0                #>  [67] ensembldb_2.32.0          hms_1.1.3                 #>  [69] metapod_1.16.0            BiocSingular_1.24.0       #>  [71] ScaledMatrix_1.16.0       XVector_0.48.0            #>  [73] stringr_1.5.1             ggrepel_0.9.6             #>  [75] pillar_1.10.2             limma_3.64.1              #>  [77] circlize_0.4.16           dplyr_1.1.4               #>  [79] lattice_0.22-6            rtracklayer_1.68.0        #>  [81] bit_4.6.0                 tidyselect_1.2.1          #>  [83] locfit_1.5-9.12           Biostrings_2.76.0         #>  [85] knitr_1.50                gridExtra_2.3             #>  [87] bookdown_0.43             ProtGenerics_1.40.0       #>  [89] edgeR_4.6.2               cmdfun_1.0.2              #>  [91] xfun_0.52                 statmod_1.5.0             #>  [93] stringi_1.8.7             UCSC.utils_1.4.0          #>  [95] EnsDb.Hsapiens.v86_2.99.0 lazyeval_0.2.2            #>  [97] yaml_2.3.10               evaluate_1.0.3            #>  [99] codetools_0.2-20          tibble_3.2.1              #> [101] BiocManager_1.30.25       cli_3.6.5                 #> [103] systemfonts_1.2.3         jquerylib_0.1.4           #> [105] Rcpp_1.0.14               png_0.1-8                 #> [107] XML_3.99-0.18             parallel_4.5.0            #> [109] pkgdown_2.1.3             readr_2.1.5               #> [111] blob_1.2.4                scran_1.36.0              #> [113] AnnotationFilter_1.32.0   sparseMatrixStats_1.20.0  #> [115] bitops_1.0-9              viridisLite_0.4.2         #> [117] scales_1.4.0              purrr_1.0.4               #> [119] crayon_1.5.3              rlang_1.1.6               #> [121] KEGGREST_1.48.0"},{"path":"https://cobriniklab.github.io/chevreulProcess/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Stachelek. Author, maintainer. Bhavana Bhat. Author.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stachelek K, Bhat B (2025). chevreulProcess: Tools managing SingleCellExperiment objects projects. R package version 0.99.23, https://github.com/cobriniklab/chevreulProcess.","code":"@Manual{,   title = {chevreulProcess: Tools for managing SingleCellExperiment objects as projects},   author = {Kevin Stachelek and Bhavana Bhat},   year = {2025},   note = {R package version 0.99.23},   url = {https://github.com/cobriniklab/chevreulProcess}, }"},{"path":"https://cobriniklab.github.io/chevreulProcess/index.html","id":"chevreulprocess","dir":"","previous_headings":"","what":"Tools for managing SingleCellExperiment objects as projects","title":"Tools for managing SingleCellExperiment objects as projects","text":"package includes set Shiny apps exploring single cell RNA datasets processed SingleCellExperiment demo using human gene transcript dataset Shayler et al. (link) available also convenient functions : Clustering Dimensional Reduction Raw Sequencing Data. Integration Label Transfer Louvain Clustering Range Resolutions Cell cycle state regression labeling [!WARNING] chevreulProcess designed full-length smart-seq based single cell data. Default settings may appropriate droplet (10x) data, though can adjusted. Keep mind best practices regarding normalization, dimensional reduction, etc. using.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for managing SingleCellExperiment objects as projects","text":"can install released version chevreulProcess github :","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/index.html","id":"install-locally-and-run-in-three-steps","dir":"","previous_headings":"Installation","what":"Install locally and run in three steps:","title":"Tools for managing SingleCellExperiment objects as projects","text":"can install chevreulProcess locally using following steps: can also customize location app using steps:","code":"install.packages(\"devtools\") devtools::install_github(\"cobriniklab/chevreulProcess\") chevreulProcess::create_project_db() devtools::install_github(\"cobriniklab/chevreulProcess\") chevreulProcess::create_project_db(destdir = \"/your/path/to/app\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Tools for managing SingleCellExperiment objects as projects","text":"First, load chevreulProcess packages required","code":"library(chevreulProcess) library(SingleCellExperiment) library(tidyverse) library(ggraph)"},{"path":"https://cobriniklab.github.io/chevreulProcess/index.html","id":"tldr","dir":"","previous_headings":"","what":"TLDR","title":"Tools for managing SingleCellExperiment objects as projects","text":"chevreulProcess provides single command : construct SingleCellExperiment object filter genes minimum expression ubiquity normalize scale expression several methods packaged SingleCellExperiment","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/index.html","id":"run-clustering-on-a-single-object","dir":"","previous_headings":"","what":"Run clustering on a single object","title":"Tools for managing SingleCellExperiment objects as projects","text":"default clustering run ten different resolutions 0.2 2.0. resolution can specified providing resolution argument numeric vector.","code":"clustered_sce <- sce_process(chevreul_sce,     experiment_name = \"sce_hu_trans\",     organism = \"human\" )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/add_percent_mito.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate percent mitochondrial reads per cell — add_percent_mito","title":"Annotate percent mitochondrial reads per cell — add_percent_mito","text":"Add Percentage Mitochondrial Read Count Categorical Variable Object (based nCount_RNA)","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/add_percent_mito.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate percent mitochondrial reads per cell — add_percent_mito","text":"","code":"add_percent_mito(object, experiment = \"gene\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/add_percent_mito.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate percent mitochondrial reads per cell — add_percent_mito","text":"object object experiment gene","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/add_percent_mito.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate percent mitochondrial reads per cell — add_percent_mito","text":"single cell object cell metadata column containing mitochondrial percentage","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/annotate_cell_cycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate Cell Cycle — annotate_cell_cycle","title":"Annotate Cell Cycle — annotate_cell_cycle","text":"Annotate Cell Cycle Gene Transcript SingleCellExperiment Objects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/annotate_cell_cycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate Cell Cycle — annotate_cell_cycle","text":"","code":"annotate_cell_cycle(object)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/annotate_cell_cycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate Cell Cycle — annotate_cell_cycle","text":"object SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/annotate_cell_cycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate Cell Cycle — annotate_cell_cycle","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/append_to_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a database of chevreul projects — append_to_project_db","title":"Update a database of chevreul projects — append_to_project_db","text":"Append projects database","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/append_to_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a database of chevreul projects — append_to_project_db","text":"","code":"append_to_project_db(   new_project_path,   cache_location = \"~/.cache/chevreul\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/append_to_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a database of chevreul projects — append_to_project_db","text":"new_project_path new project path cache_location Path cache \"~/.cache/chevreul\" sqlite_db sqlite db verbose print messages","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/append_to_project_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a database of chevreul projects — append_to_project_db","text":"sqlite database SingleCellExperiment objects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/build_bigwig_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a database of bigwigfiles — build_bigwig_db","title":"Create a database of bigwigfiles — build_bigwig_db","text":"Create sqlite database bigwig files matching cell ids objects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/build_bigwig_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a database of bigwigfiles — build_bigwig_db","text":"","code":"build_bigwig_db(bam_files, bigwig_db = \"~/.cache/chevreul/bw-files.db\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/build_bigwig_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a database of bigwigfiles — build_bigwig_db","text":"bam_files vector paths bam files bigwig_db bigwig database","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/build_bigwig_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a database of bigwigfiles — build_bigwig_db","text":"path bigwig file sqlite database","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/cc.genes.cyclone.html","id":null,"dir":"Reference","previous_headings":"","what":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","title":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","text":"cell cycle genes paired expression represented HGNC symbol","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/cc.genes.cyclone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","text":"","code":"cc.genes.cyclone"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/cc.genes.cyclone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","text":"list dataframes G1, G2, S gene expression G1 G1 gene symbols G2 G2 gene symbols S S gene symbols","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/cc.genes.cyclone.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cyclone cell cycle pairs by symbol — cc.genes.cyclone","text":"cyclone","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/chevreulProcess-package.html","id":null,"dir":"Reference","previous_headings":"","what":"chevreulProcess: Tools for managing SingleCellExperiment objects as projects — chevreulProcess-package","title":"chevreulProcess: Tools for managing SingleCellExperiment objects as projects — chevreulProcess-package","text":"Tools analyzing SingleCellExperiment objects projects. input chevreulShiny app downstream. Includes functions analysis single cell RNA sequencing data. Supported NIH grants R01CA137124 R01EY026661 David Cobrinik.","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/chevreulProcess-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"chevreulProcess: Tools for managing SingleCellExperiment objects as projects — chevreulProcess-package","text":"Maintainer: Kevin Stachelek kevin.stachelek@gmail.com (ORCID) Authors: Bhavana Bhat bhavanabhat29@gmail.com","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/convert_human_sce_to_mouse.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SingleCellExperiment Objects from Human to Mouse — convert_human_sce_to_mouse","title":"Convert SingleCellExperiment Objects from Human to Mouse — convert_human_sce_to_mouse","text":"Convert SingleCellExperiment Objects Human Mouse","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/convert_human_sce_to_mouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SingleCellExperiment Objects from Human to Mouse — convert_human_sce_to_mouse","text":"","code":"convert_human_sce_to_mouse(object, ...)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/convert_human_sce_to_mouse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SingleCellExperiment Objects from Human to Mouse — convert_human_sce_to_mouse","text":"object Human SingleCellExperiment object ... passed convert_symbols_by_species","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/convert_human_sce_to_mouse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SingleCellExperiment Objects from Human to Mouse — convert_human_sce_to_mouse","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/convert_symbols_by_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert gene symbols between mouse and human — convert_symbols_by_species","title":"Convert gene symbols between mouse and human — convert_symbols_by_species","text":"Convert gene symbols mouse human","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/convert_symbols_by_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert gene symbols between mouse and human — convert_symbols_by_species","text":"","code":"convert_symbols_by_species(src_genes, src_species)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/convert_symbols_by_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert gene symbols between mouse and human — convert_symbols_by_species","text":"src_genes Source gene symbol converted src_species Source species","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/convert_symbols_by_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert gene symbols between mouse and human — convert_symbols_by_species","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/create_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a database of chevreul projects — create_project_db","title":"Create a database of chevreul projects — create_project_db","text":"Create database containing chevreul projects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/create_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a database of chevreul projects — create_project_db","text":"","code":"create_project_db(   cache_location = \"~/.cache/chevreul\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/create_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a database of chevreul projects — create_project_db","text":"cache_location Path cache \"~/.cache/chevreul\" sqlite_db Database created verbose print messages","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/create_project_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a database of chevreul projects — create_project_db","text":"sqlite database SingleCellExperiment objects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/ensembl_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensembl version used for build — ensembl_version","title":"Ensembl version used for build — ensembl_version","text":"Ensembl version used build","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/ensembl_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensembl version used for build — ensembl_version","text":"","code":"ensembl_version"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/ensembl_version.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ensembl version used for build — ensembl_version","text":"object class character length 1.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/ensembl_version.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ensembl version used for build — ensembl_version","text":"http://www.ensembl.org/","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/ensembl_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensembl version used for build — ensembl_version","text":"","code":"# ensembl_version"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/find_all_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find All Markers — find_all_markers","title":"Find All Markers — find_all_markers","text":"Find markers range resolutions","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/find_all_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find All Markers — find_all_markers","text":"","code":"find_all_markers(object, group_by = NULL, experiment = \"gene\", ...)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/find_all_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find All Markers — find_all_markers","text":"object object. group_by metadata variable group . experiment Assay use, Default \"gene\". ... extra args passed stash_marker_features","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/find_all_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find All Markers — find_all_markers","text":"SingleCellExperiment object containing marker genes","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/find_all_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find All Markers — find_all_markers","text":"","code":"data(\"small_example_dataset\") find_all_markers(small_example_dataset, \"gene_snn_res.1\") #> stashing markers for gene_snn_res.1 #> class: SingleCellExperiment  #> dim: 1000 200  #> metadata(1): markers #> assays(2): counts logcounts #> rownames(1000): Gene_0001 Gene_0002 ... Gene_0999 Gene_1000 #> rowData names(0): #> colnames(200): Cell_001 Cell_002 ... Cell_199 Cell_200 #> colData names(9): Mutation_Status Cell_Cycle ... gene_snn_res.0.8 #>   gene_snn_res.1 #> reducedDimNames(3): PCA TSNE UMAP #> mainExpName: gene #> altExpNames(1): Spikes"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/genes_to_transcripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"convert hgnc gene symbols ensembl transcript ids","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/genes_to_transcripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"","code":"genes_to_transcripts(symbols)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/genes_to_transcripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"symbols character vector gene symbols","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/genes_to_transcripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"vector transcripts","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/genes_to_transcripts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"","code":"genes_to_transcripts(\"NRL\") #> [1] \"ENST00000397002\" \"ENST00000561028\" \"ENST00000396997\" \"ENST00000560550\" #> [5] \"ENST00000396995\" \"ENST00000558280\""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_colData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cell metadata from a given object — get_colData","title":"Get cell metadata from a given object — get_colData","text":"Get cell metadata","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_colData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cell metadata from a given object — get_colData","text":"","code":"get_colData(object)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_colData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cell metadata from a given object — get_colData","text":"object SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_colData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cell metadata from a given object — get_colData","text":"dataframe containing object metadata","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_colData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get cell metadata from a given object — get_colData","text":"","code":"data(small_example_dataset) get_colData(small_example_dataset) #>          Mutation_Status Cell_Cycle Treatment sizeFactor gene_snn_res.0.2 #> Cell_001        negative        G2M    treat1  1.1145726                1 #> Cell_002        negative         G0    treat2  1.0258532                1 #> Cell_003        negative         G1    treat1  1.0290112                1 #> Cell_004        positive         G1    treat1  0.9819388                1 #> Cell_005        positive         G0    treat1  1.0348930                1 #> Cell_006        positive         G1    treat1  0.9429467                1 #> Cell_007        positive         G1    treat1  0.9318988                1 #> Cell_008        positive          S    treat2  0.9793545                1 #> Cell_009        negative        G2M    treat2  0.9828149                1 #> Cell_010        positive          S    treat2  0.8824296                1 #> Cell_011        positive         G1    treat2  1.0247074                1 #> Cell_012        negative         G1    treat2  0.9509959                1 #> Cell_013        negative         G1    treat2  0.9716238                1 #> Cell_014        negative         G0    treat2  1.0996512                1 #> Cell_015        positive         G1    treat2  0.9799518                1 #> Cell_016        negative         G1    treat1  0.9352124                1 #> Cell_017        positive          S    treat2  1.0002126                1 #> Cell_018        negative         G0    treat1  1.0995758                1 #> Cell_019        positive         G0    treat1  1.0193572                1 #> Cell_020        negative          S    treat1  0.9255821                1 #> Cell_021        negative        G2M    treat1  1.0059541                1 #> Cell_022        positive          S    treat1  0.9269527                1 #> Cell_023        negative         G0    treat2  1.0758021                1 #> Cell_024        positive         G1    treat1  0.9763458                1 #> Cell_025        positive        G2M    treat1  1.0253497                1 #> Cell_026        positive          S    treat1  0.9814304                1 #> Cell_027        negative        G2M    treat1  1.0924157                1 #> Cell_028        negative         G1    treat1  0.8926685                1 #> Cell_029        positive         G0    treat1  0.9606481                1 #> Cell_030        positive         G0    treat1  1.0054834                1 #> Cell_031        negative         G1    treat1  0.9786144                1 #> Cell_032        negative          S    treat1  0.9814397                1 #> Cell_033        negative          S    treat2  1.0179959                1 #> Cell_034        positive          S    treat2  1.0932561                1 #> Cell_035        positive         G0    treat1  1.0014124                1 #> Cell_036        positive        G2M    treat2  1.0006518                1 #> Cell_037        negative         G1    treat1  0.8801498                1 #> Cell_038        negative         G0    treat1  1.0819076                1 #> Cell_039        negative          S    treat1  0.9758182                1 #> Cell_040        negative         G1    treat2  0.9448406                1 #> Cell_041        negative         G0    treat2  0.9609479                1 #> Cell_042        negative         G0    treat2  0.9759914                1 #> Cell_043        negative         G0    treat2  0.9689277                1 #> Cell_044        negative          S    treat2  1.0541597                1 #> Cell_045        positive          S    treat2  0.9910263                1 #> Cell_046        negative          S    treat2  0.9539840                1 #> Cell_047        positive          S    treat2  0.9629895                1 #> Cell_048        positive          S    treat2  0.9452803                1 #> Cell_049        negative        G2M    treat2  0.9545133                1 #> Cell_050        positive         G0    treat2  0.9663592                1 #> Cell_051        negative          S    treat2  1.0291404                1 #> Cell_052        negative        G2M    treat1  0.9446159                1 #> Cell_053        negative        G2M    treat1  1.0692874                1 #> Cell_054        positive        G2M    treat1  0.9183253                1 #> Cell_055        positive         G1    treat2  0.9951239                1 #> Cell_056        negative         G1    treat2  1.0204158                1 #> Cell_057        negative         G0    treat1  0.9897214                1 #> Cell_058        positive          S    treat2  0.9547637                1 #> Cell_059        positive          S    treat2  0.9913231                1 #> Cell_060        positive         G1    treat1  1.0746326                1 #> Cell_061        positive        G2M    treat2  1.0726131                1 #> Cell_062        negative        G2M    treat1  0.9961637                1 #> Cell_063        negative          S    treat2  0.9710829                1 #> Cell_064        positive          S    treat1  1.0525661                1 #> Cell_065        positive         G1    treat2  0.9683463                1 #> Cell_066        positive          S    treat2  0.9116608                1 #> Cell_067        positive        G2M    treat2  1.0339690                1 #> Cell_068        positive          S    treat2  1.0590225                1 #> Cell_069        positive        G2M    treat1  0.9962803                1 #> Cell_070        negative         G1    treat1  1.0685195                1 #> Cell_071        negative          S    treat2  1.0034075                1 #> Cell_072        negative         G0    treat1  0.9347527                1 #> Cell_073        negative         G1    treat2  0.9767006                1 #> Cell_074        positive         G1    treat1  0.9643088                1 #> Cell_075        negative        G2M    treat1  1.0429042                1 #> Cell_076        negative        G2M    treat2  1.0979463                1 #> Cell_077        positive        G2M    treat2  1.0130950                1 #> Cell_078        positive         G1    treat2  0.9634182                1 #> Cell_079        negative        G2M    treat1  0.9319686                1 #> Cell_080        positive          S    treat1  1.0402156                1 #> Cell_081        negative         G0    treat2  1.0271916                1 #> Cell_082        negative          S    treat1  1.0317826                1 #> Cell_083        negative         G1    treat2  0.9765001                1 #> Cell_084        negative          S    treat2  1.0043030                1 #> Cell_085        negative         G1    treat1  1.0450564                1 #> Cell_086        positive          S    treat2  1.0952878                1 #> Cell_087        positive        G2M    treat2  1.0253371                1 #> Cell_088        positive        G2M    treat2  1.0344026                1 #> Cell_089        positive         G1    treat2  1.0036942                1 #> Cell_090        positive         G0    treat2  0.9457718                1 #> Cell_091        positive         G1    treat2  1.1214554                1 #> Cell_092        positive          S    treat2  0.9634439                1 #> Cell_093        positive         G0    treat1  1.0793421                1 #> Cell_094        positive        G2M    treat1  1.0587092                1 #> Cell_095        negative          S    treat1  1.0215250                1 #> Cell_096        positive        G2M    treat2  1.0400255                1 #> Cell_097        negative        G2M    treat2  0.9881216                1 #> Cell_098        positive         G0    treat2  0.9808671                1 #> Cell_099        positive         G0    treat2  1.0298299                1 #> Cell_100        positive         G1    treat1  1.0232027                1 #> Cell_101        positive          S    treat1  0.9786401                1 #> Cell_102        positive        G2M    treat1  1.1133959                1 #> Cell_103        negative         G1    treat2  0.9665361                1 #> Cell_104        positive         G1    treat2  1.0344762                1 #> Cell_105        negative          S    treat1  0.9392695                1 #> Cell_106        positive         G1    treat1  1.0007739                1 #> Cell_107        positive         G1    treat1  0.9301685                1 #> Cell_108        negative         G1    treat2  0.9176411                1 #> Cell_109        negative         G0    treat2  0.9928462                1 #> Cell_110        negative        G2M    treat2  0.9690930                1 #> Cell_111        negative        G2M    treat2  0.9998078                1 #> Cell_112        positive        G2M    treat1  0.9886310                1 #> Cell_113        positive         G1    treat2  1.1554798                1 #> Cell_114        negative         G1    treat1  0.9750654                1 #> Cell_115        negative        G2M    treat1  0.9928583                1 #> Cell_116        positive        G2M    treat2  1.0670164                1 #> Cell_117        negative        G2M    treat1  0.9315175                1 #> Cell_118        negative         G1    treat2  0.8990550                1 #> Cell_119        negative         G0    treat2  0.9660859                1 #> Cell_120        positive         G1    treat1  0.9265683                1 #> Cell_121        negative         G0    treat1  0.9869852                1 #> Cell_122        positive         G1    treat1  0.9528340                1 #> Cell_123        negative         G0    treat1  0.9797962                1 #> Cell_124        negative         G1    treat2  1.0580552                1 #> Cell_125        positive         G1    treat2  1.0913942                1 #> Cell_126        negative        G2M    treat2  1.1448574                1 #> Cell_127        negative         G0    treat2  1.0742030                1 #> Cell_128        negative          S    treat2  1.0427186                1 #> Cell_129        negative        G2M    treat2  1.0160625                1 #> Cell_130        positive         G0    treat1  0.8845348                1 #> Cell_131        positive         G1    treat1  1.0563213                1 #> Cell_132        positive          S    treat2  1.0108953                1 #> Cell_133        negative         G1    treat1  1.0086093                1 #> Cell_134        negative        G2M    treat1  0.9637208                1 #> Cell_135        negative          S    treat2  0.9950524                1 #> Cell_136        negative          S    treat1  0.9943510                1 #> Cell_137        positive        G2M    treat2  1.0011909                1 #> Cell_138        positive         G0    treat2  0.9439179                1 #> Cell_139        negative         G0    treat2  0.9515168                1 #> Cell_140        negative         G1    treat2  0.9426286                1 #> Cell_141        positive        G2M    treat2  0.9336732                1 #> Cell_142        positive         G0    treat1  0.9540710                1 #> Cell_143        negative        G2M    treat2  1.0502945                1 #> Cell_144        negative          S    treat1  0.9908649                1 #> Cell_145        positive          S    treat2  0.9641350                1 #> Cell_146        negative         G0    treat1  0.9920954                1 #> Cell_147        positive         G1    treat2  0.9347253                1 #> Cell_148        positive         G0    treat1  1.0563486                1 #> Cell_149        positive         G0    treat1  0.9420012                1 #> Cell_150        negative          S    treat2  0.9897291                1 #> Cell_151        negative        G2M    treat1  0.9783924                1 #> Cell_152        negative         G0    treat2  1.0454217                1 #> Cell_153        positive         G0    treat1  1.0868901                1 #> Cell_154        negative        G2M    treat2  0.9689864                1 #> Cell_155        positive         G1    treat1  1.0115313                1 #> Cell_156        positive          S    treat2  0.9569000                1 #> Cell_157        positive         G0    treat2  0.9532079                1 #> Cell_158        negative         G1    treat2  0.9287082                1 #> Cell_159        negative         G1    treat2  1.0397039                1 #> Cell_160        positive         G0    treat1  0.9395819                1 #> Cell_161        positive          S    treat1  1.0524298                1 #> Cell_162        positive        G2M    treat2  0.9173944                1 #> Cell_163        negative        G2M    treat1  1.0188281                1 #> Cell_164        positive        G2M    treat2  1.0616031                1 #> Cell_165        positive         G0    treat1  0.9806334                1 #> Cell_166        negative          S    treat1  1.0495063                1 #> Cell_167        positive          S    treat2  1.0266468                1 #> Cell_168        positive         G1    treat2  0.9198476                1 #> Cell_169        positive        G2M    treat2  1.0458789                1 #> Cell_170        positive         G0    treat1  1.0182435                1 #> Cell_171        negative         G0    treat1  1.1039449                1 #> Cell_172        negative         G1    treat2  1.0001994                1 #> Cell_173        negative         G1    treat1  0.9096646                1 #> Cell_174        negative         G0    treat2  0.9405274                1 #> Cell_175        positive         G1    treat2  1.1460040                1 #> Cell_176        positive         G0    treat2  1.0153850                1 #> Cell_177        positive         G1    treat1  1.0040565                1 #> Cell_178        positive         G1    treat1  1.0496552                1 #> Cell_179        negative        G2M    treat2  1.0046584                1 #> Cell_180        negative          S    treat1  1.0375506                1 #> Cell_181        positive          S    treat2  0.9591888                1 #> Cell_182        negative        G2M    treat2  0.9937740                1 #> Cell_183        negative         G1    treat1  1.0922044                1 #> Cell_184        negative         G1    treat1  0.9659657                1 #> Cell_185        positive         G1    treat2  1.0436392                1 #> Cell_186        positive         G1    treat2  1.0234783                1 #> Cell_187        negative          S    treat1  1.0136519                1 #> Cell_188        negative         G0    treat1  0.9763010                1 #> Cell_189        positive          S    treat2  1.0316742                1 #> Cell_190        negative         G1    treat1  0.9619334                1 #> Cell_191        negative         G1    treat1  1.0156674                1 #> Cell_192        negative          S    treat2  1.0761745                1 #> Cell_193        negative          S    treat2  0.9816982                1 #> Cell_194        positive        G2M    treat1  0.9848616                1 #> Cell_195        negative        G2M    treat2  0.9232160                1 #> Cell_196        positive          S    treat2  0.9821040                1 #> Cell_197        negative         G1    treat2  0.9662633                1 #> Cell_198        negative         G0    treat1  1.0046841                1 #> Cell_199        positive         G1    treat2  0.9722350                1 #> Cell_200        negative         G0    treat1  1.0387534                1 #>          gene_snn_res.0.4 gene_snn_res.0.6 gene_snn_res.0.8 gene_snn_res.1 #> Cell_001                1                1                1              1 #> Cell_002                1                1                1              2 #> Cell_003                1                1                1              3 #> Cell_004                1                1                1              2 #> Cell_005                1                1                1              4 #> Cell_006                1                1                1              5 #> Cell_007                1                1                1              1 #> Cell_008                1                1                1              1 #> Cell_009                1                1                1              3 #> Cell_010                1                1                1              4 #> Cell_011                1                1                1              4 #> Cell_012                1                1                1              4 #> Cell_013                1                1                1              4 #> Cell_014                1                1                1              1 #> Cell_015                1                1                1              5 #> Cell_016                1                1                1              2 #> Cell_017                1                1                1              2 #> Cell_018                1                1                1              1 #> Cell_019                1                1                1              2 #> Cell_020                1                1                1              5 #> Cell_021                1                1                1              5 #> Cell_022                1                1                1              4 #> Cell_023                1                1                1              3 #> Cell_024                1                1                1              3 #> Cell_025                1                1                1              2 #> Cell_026                1                1                1              2 #> Cell_027                1                1                1              2 #> Cell_028                1                1                1              5 #> Cell_029                1                1                1              2 #> Cell_030                1                1                1              2 #> Cell_031                1                1                1              5 #> Cell_032                1                1                1              5 #> Cell_033                1                1                1              4 #> Cell_034                1                1                1              2 #> Cell_035                1                1                1              2 #> Cell_036                1                1                1              1 #> Cell_037                1                1                1              2 #> Cell_038                1                1                1              4 #> Cell_039                1                1                1              4 #> Cell_040                1                1                1              1 #> Cell_041                1                1                1              3 #> Cell_042                1                1                1              1 #> Cell_043                1                1                1              1 #> Cell_044                1                1                1              2 #> Cell_045                1                1                1              5 #> Cell_046                1                1                1              5 #> Cell_047                1                1                1              3 #> Cell_048                1                1                1              3 #> Cell_049                1                1                1              2 #> Cell_050                1                1                1              1 #> Cell_051                1                1                1              4 #> Cell_052                1                1                1              3 #> Cell_053                1                1                1              1 #> Cell_054                1                1                1              1 #> Cell_055                1                1                1              1 #> Cell_056                1                1                1              1 #> Cell_057                1                1                1              4 #> Cell_058                1                1                1              3 #> Cell_059                1                1                1              2 #> Cell_060                1                1                1              3 #> Cell_061                1                1                1              3 #> Cell_062                1                1                1              4 #> Cell_063                1                1                1              5 #> Cell_064                1                1                1              3 #> Cell_065                1                1                1              2 #> Cell_066                1                1                1              2 #> Cell_067                1                1                1              2 #> Cell_068                1                1                1              1 #> Cell_069                1                1                1              5 #> Cell_070                1                1                1              1 #> Cell_071                1                1                1              2 #> Cell_072                1                1                1              2 #> Cell_073                1                1                1              4 #> Cell_074                1                1                1              5 #> Cell_075                1                1                1              1 #> Cell_076                1                1                1              4 #> Cell_077                1                1                1              1 #> Cell_078                1                1                1              5 #> Cell_079                1                1                1              2 #> Cell_080                1                1                1              5 #> Cell_081                1                1                1              4 #> Cell_082                1                1                1              4 #> Cell_083                1                1                1              4 #> Cell_084                1                1                1              1 #> Cell_085                1                1                1              2 #> Cell_086                1                1                1              4 #> Cell_087                1                1                1              1 #> Cell_088                1                1                1              4 #> Cell_089                1                1                1              2 #> Cell_090                1                1                1              5 #> Cell_091                1                1                1              4 #> Cell_092                1                1                1              2 #> Cell_093                1                1                1              5 #> Cell_094                1                1                1              1 #> Cell_095                1                1                1              2 #> Cell_096                1                1                1              2 #> Cell_097                1                1                1              2 #> Cell_098                1                1                1              2 #> Cell_099                1                1                1              2 #> Cell_100                1                1                1              4 #> Cell_101                1                1                1              5 #> Cell_102                1                1                1              2 #> Cell_103                1                1                1              5 #> Cell_104                1                1                1              3 #> Cell_105                1                1                1              4 #> Cell_106                1                1                1              1 #> Cell_107                1                1                1              1 #> Cell_108                1                1                1              2 #> Cell_109                1                1                1              5 #> Cell_110                1                1                1              1 #> Cell_111                1                1                1              2 #> Cell_112                1                1                1              2 #> Cell_113                1                1                1              5 #> Cell_114                1                1                1              3 #> Cell_115                1                1                1              2 #> Cell_116                1                1                1              5 #> Cell_117                1                1                1              2 #> Cell_118                1                1                1              4 #> Cell_119                1                1                1              2 #> Cell_120                1                1                1              2 #> Cell_121                1                1                1              1 #> Cell_122                1                1                1              1 #> Cell_123                1                1                1              1 #> Cell_124                1                1                1              2 #> Cell_125                1                1                1              2 #> Cell_126                1                1                1              1 #> Cell_127                1                1                1              3 #> Cell_128                1                1                1              2 #> Cell_129                1                1                1              5 #> Cell_130                1                1                1              5 #> Cell_131                1                1                1              4 #> Cell_132                1                1                1              5 #> Cell_133                1                1                1              1 #> Cell_134                1                1                1              3 #> Cell_135                1                1                1              5 #> Cell_136                1                1                1              1 #> Cell_137                1                1                1              2 #> Cell_138                1                1                1              2 #> Cell_139                1                1                1              4 #> Cell_140                1                1                1              4 #> Cell_141                1                1                1              1 #> Cell_142                1                1                1              4 #> Cell_143                1                1                1              5 #> Cell_144                1                1                1              5 #> Cell_145                1                1                1              4 #> Cell_146                1                1                1              1 #> Cell_147                1                1                1              2 #> Cell_148                1                1                1              1 #> Cell_149                1                1                1              2 #> Cell_150                1                1                1              2 #> Cell_151                1                1                1              1 #> Cell_152                1                1                1              2 #> Cell_153                1                1                1              1 #> Cell_154                1                1                1              5 #> Cell_155                1                1                1              5 #> Cell_156                1                1                1              3 #> Cell_157                1                1                1              2 #> Cell_158                1                1                1              4 #> Cell_159                1                1                1              2 #> Cell_160                1                1                1              1 #> Cell_161                1                1                1              1 #> Cell_162                1                1                1              1 #> Cell_163                1                1                1              5 #> Cell_164                1                1                1              1 #> Cell_165                1                1                1              2 #> Cell_166                1                1                1              5 #> Cell_167                1                1                1              5 #> Cell_168                1                1                1              1 #> Cell_169                1                1                1              4 #> Cell_170                1                1                1              5 #> Cell_171                1                1                1              2 #> Cell_172                1                1                1              5 #> Cell_173                1                1                1              1 #> Cell_174                1                1                1              2 #> Cell_175                1                1                1              2 #> Cell_176                1                1                1              4 #> Cell_177                1                1                1              5 #> Cell_178                1                1                1              1 #> Cell_179                1                1                1              3 #> Cell_180                1                1                1              2 #> Cell_181                1                1                1              4 #> Cell_182                1                1                1              5 #> Cell_183                1                1                1              3 #> Cell_184                1                1                1              1 #> Cell_185                1                1                1              4 #> Cell_186                1                1                1              1 #> Cell_187                1                1                1              5 #> Cell_188                1                1                1              2 #> Cell_189                1                1                1              1 #> Cell_190                1                1                1              4 #> Cell_191                1                1                1              2 #> Cell_192                1                1                1              2 #> Cell_193                1                1                1              1 #> Cell_194                1                1                1              2 #> Cell_195                1                1                1              3 #> Cell_196                1                1                1              4 #> Cell_197                1                1                1              2 #> Cell_198                1                1                1              5 #> Cell_199                1                1                1              1 #> Cell_200                1                1                1              1"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_feature_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Feature Types — get_feature_types","title":"Get Feature Types — get_feature_types","text":"Get Feature Types","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_feature_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Feature Types — get_feature_types","text":"","code":"get_feature_types(object)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_feature_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Feature Types — get_feature_types","text":"object SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_feature_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Feature Types — get_feature_types","text":"vector feature types object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_feature_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Feature Types — get_feature_types","text":"","code":"data(small_example_dataset) get_feature_types(small_example_dataset) #> [1] \"Spikes\" \"gene\""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Get feature names — get_features","title":"Get feature names — get_features","text":"Get feature names","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get feature names — get_features","text":"","code":"get_features(object, experiment = \"gene\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get feature names — get_features","text":"object SingleCellExperiment object experiment \"gene\" \"transcript\"","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get feature names — get_features","text":"variable features SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get feature names — get_features","text":"","code":"data(small_example_dataset) get_features(small_example_dataset) #>    [1] \"Gene_0001\" \"Gene_0002\" \"Gene_0003\" \"Gene_0004\" \"Gene_0005\" \"Gene_0006\" #>    [7] \"Gene_0007\" \"Gene_0008\" \"Gene_0009\" \"Gene_0010\" \"Gene_0011\" \"Gene_0012\" #>   [13] \"Gene_0013\" \"Gene_0014\" \"Gene_0015\" \"Gene_0016\" \"Gene_0017\" \"Gene_0018\" #>   [19] \"Gene_0019\" \"Gene_0020\" \"Gene_0021\" \"Gene_0022\" \"Gene_0023\" \"Gene_0024\" #>   [25] \"Gene_0025\" \"Gene_0026\" \"Gene_0027\" \"Gene_0028\" \"Gene_0029\" \"Gene_0030\" #>   [31] \"Gene_0031\" \"Gene_0032\" \"Gene_0033\" \"Gene_0034\" \"Gene_0035\" \"Gene_0036\" #>   [37] \"Gene_0037\" \"Gene_0038\" \"Gene_0039\" \"Gene_0040\" \"Gene_0041\" \"Gene_0042\" #>   [43] \"Gene_0043\" \"Gene_0044\" \"Gene_0045\" \"Gene_0046\" \"Gene_0047\" \"Gene_0048\" #>   [49] \"Gene_0049\" \"Gene_0050\" \"Gene_0051\" \"Gene_0052\" \"Gene_0053\" \"Gene_0054\" #>   [55] \"Gene_0055\" \"Gene_0056\" \"Gene_0057\" \"Gene_0058\" \"Gene_0059\" \"Gene_0060\" #>   [61] \"Gene_0061\" \"Gene_0062\" \"Gene_0063\" \"Gene_0064\" \"Gene_0065\" \"Gene_0066\" #>   [67] \"Gene_0067\" \"Gene_0068\" \"Gene_0069\" \"Gene_0070\" \"Gene_0071\" \"Gene_0072\" #>   [73] \"Gene_0073\" \"Gene_0074\" \"Gene_0075\" \"Gene_0076\" \"Gene_0077\" \"Gene_0078\" #>   [79] \"Gene_0079\" \"Gene_0080\" \"Gene_0081\" \"Gene_0082\" \"Gene_0083\" \"Gene_0084\" #>   [85] \"Gene_0085\" \"Gene_0086\" \"Gene_0087\" \"Gene_0088\" \"Gene_0089\" \"Gene_0090\" #>   [91] \"Gene_0091\" \"Gene_0092\" \"Gene_0093\" \"Gene_0094\" \"Gene_0095\" \"Gene_0096\" #>   [97] \"Gene_0097\" \"Gene_0098\" \"Gene_0099\" \"Gene_0100\" \"Gene_0101\" \"Gene_0102\" #>  [103] \"Gene_0103\" \"Gene_0104\" \"Gene_0105\" \"Gene_0106\" \"Gene_0107\" \"Gene_0108\" #>  [109] \"Gene_0109\" \"Gene_0110\" \"Gene_0111\" \"Gene_0112\" \"Gene_0113\" \"Gene_0114\" #>  [115] \"Gene_0115\" \"Gene_0116\" \"Gene_0117\" \"Gene_0118\" \"Gene_0119\" \"Gene_0120\" #>  [121] \"Gene_0121\" \"Gene_0122\" \"Gene_0123\" \"Gene_0124\" \"Gene_0125\" \"Gene_0126\" #>  [127] \"Gene_0127\" \"Gene_0128\" \"Gene_0129\" \"Gene_0130\" \"Gene_0131\" \"Gene_0132\" #>  [133] \"Gene_0133\" \"Gene_0134\" \"Gene_0135\" \"Gene_0136\" \"Gene_0137\" \"Gene_0138\" #>  [139] \"Gene_0139\" \"Gene_0140\" \"Gene_0141\" \"Gene_0142\" \"Gene_0143\" \"Gene_0144\" #>  [145] \"Gene_0145\" \"Gene_0146\" \"Gene_0147\" \"Gene_0148\" \"Gene_0149\" \"Gene_0150\" #>  [151] \"Gene_0151\" \"Gene_0152\" \"Gene_0153\" \"Gene_0154\" \"Gene_0155\" \"Gene_0156\" #>  [157] \"Gene_0157\" \"Gene_0158\" \"Gene_0159\" \"Gene_0160\" \"Gene_0161\" \"Gene_0162\" #>  [163] \"Gene_0163\" \"Gene_0164\" \"Gene_0165\" \"Gene_0166\" \"Gene_0167\" \"Gene_0168\" #>  [169] \"Gene_0169\" \"Gene_0170\" \"Gene_0171\" \"Gene_0172\" \"Gene_0173\" \"Gene_0174\" #>  [175] \"Gene_0175\" \"Gene_0176\" \"Gene_0177\" \"Gene_0178\" \"Gene_0179\" \"Gene_0180\" #>  [181] \"Gene_0181\" \"Gene_0182\" \"Gene_0183\" \"Gene_0184\" \"Gene_0185\" \"Gene_0186\" #>  [187] \"Gene_0187\" \"Gene_0188\" \"Gene_0189\" \"Gene_0190\" \"Gene_0191\" \"Gene_0192\" #>  [193] \"Gene_0193\" \"Gene_0194\" \"Gene_0195\" \"Gene_0196\" \"Gene_0197\" \"Gene_0198\" #>  [199] \"Gene_0199\" \"Gene_0200\" \"Gene_0201\" \"Gene_0202\" \"Gene_0203\" \"Gene_0204\" #>  [205] \"Gene_0205\" \"Gene_0206\" \"Gene_0207\" \"Gene_0208\" \"Gene_0209\" \"Gene_0210\" #>  [211] \"Gene_0211\" \"Gene_0212\" \"Gene_0213\" \"Gene_0214\" \"Gene_0215\" \"Gene_0216\" #>  [217] \"Gene_0217\" \"Gene_0218\" \"Gene_0219\" \"Gene_0220\" \"Gene_0221\" \"Gene_0222\" #>  [223] \"Gene_0223\" \"Gene_0224\" \"Gene_0225\" \"Gene_0226\" \"Gene_0227\" \"Gene_0228\" #>  [229] \"Gene_0229\" \"Gene_0230\" \"Gene_0231\" \"Gene_0232\" \"Gene_0233\" \"Gene_0234\" #>  [235] \"Gene_0235\" \"Gene_0236\" \"Gene_0237\" \"Gene_0238\" \"Gene_0239\" \"Gene_0240\" #>  [241] \"Gene_0241\" \"Gene_0242\" \"Gene_0243\" \"Gene_0244\" \"Gene_0245\" \"Gene_0246\" #>  [247] \"Gene_0247\" \"Gene_0248\" \"Gene_0249\" \"Gene_0250\" \"Gene_0251\" \"Gene_0252\" #>  [253] \"Gene_0253\" \"Gene_0254\" \"Gene_0255\" \"Gene_0256\" \"Gene_0257\" \"Gene_0258\" #>  [259] \"Gene_0259\" \"Gene_0260\" \"Gene_0261\" \"Gene_0262\" \"Gene_0263\" \"Gene_0264\" #>  [265] \"Gene_0265\" \"Gene_0266\" \"Gene_0267\" \"Gene_0268\" \"Gene_0269\" \"Gene_0270\" #>  [271] \"Gene_0271\" \"Gene_0272\" \"Gene_0273\" \"Gene_0274\" \"Gene_0275\" \"Gene_0276\" #>  [277] \"Gene_0277\" \"Gene_0278\" \"Gene_0279\" \"Gene_0280\" \"Gene_0281\" \"Gene_0282\" #>  [283] \"Gene_0283\" \"Gene_0284\" \"Gene_0285\" \"Gene_0286\" \"Gene_0287\" \"Gene_0288\" #>  [289] \"Gene_0289\" \"Gene_0290\" \"Gene_0291\" \"Gene_0292\" \"Gene_0293\" \"Gene_0294\" #>  [295] \"Gene_0295\" \"Gene_0296\" \"Gene_0297\" \"Gene_0298\" \"Gene_0299\" \"Gene_0300\" #>  [301] \"Gene_0301\" \"Gene_0302\" \"Gene_0303\" \"Gene_0304\" \"Gene_0305\" \"Gene_0306\" #>  [307] \"Gene_0307\" \"Gene_0308\" \"Gene_0309\" \"Gene_0310\" \"Gene_0311\" \"Gene_0312\" #>  [313] \"Gene_0313\" \"Gene_0314\" \"Gene_0315\" \"Gene_0316\" \"Gene_0317\" \"Gene_0318\" #>  [319] \"Gene_0319\" \"Gene_0320\" \"Gene_0321\" \"Gene_0322\" \"Gene_0323\" \"Gene_0324\" #>  [325] \"Gene_0325\" \"Gene_0326\" \"Gene_0327\" \"Gene_0328\" \"Gene_0329\" \"Gene_0330\" #>  [331] \"Gene_0331\" \"Gene_0332\" \"Gene_0333\" \"Gene_0334\" \"Gene_0335\" \"Gene_0336\" #>  [337] \"Gene_0337\" \"Gene_0338\" \"Gene_0339\" \"Gene_0340\" \"Gene_0341\" \"Gene_0342\" #>  [343] \"Gene_0343\" \"Gene_0344\" \"Gene_0345\" \"Gene_0346\" \"Gene_0347\" \"Gene_0348\" #>  [349] \"Gene_0349\" \"Gene_0350\" \"Gene_0351\" \"Gene_0352\" \"Gene_0353\" \"Gene_0354\" #>  [355] \"Gene_0355\" \"Gene_0356\" \"Gene_0357\" \"Gene_0358\" \"Gene_0359\" \"Gene_0360\" #>  [361] \"Gene_0361\" \"Gene_0362\" \"Gene_0363\" \"Gene_0364\" \"Gene_0365\" \"Gene_0366\" #>  [367] \"Gene_0367\" \"Gene_0368\" \"Gene_0369\" \"Gene_0370\" \"Gene_0371\" \"Gene_0372\" #>  [373] \"Gene_0373\" \"Gene_0374\" \"Gene_0375\" \"Gene_0376\" \"Gene_0377\" \"Gene_0378\" #>  [379] \"Gene_0379\" \"Gene_0380\" \"Gene_0381\" \"Gene_0382\" \"Gene_0383\" \"Gene_0384\" #>  [385] \"Gene_0385\" \"Gene_0386\" \"Gene_0387\" \"Gene_0388\" \"Gene_0389\" \"Gene_0390\" #>  [391] \"Gene_0391\" \"Gene_0392\" \"Gene_0393\" \"Gene_0394\" \"Gene_0395\" \"Gene_0396\" #>  [397] \"Gene_0397\" \"Gene_0398\" \"Gene_0399\" \"Gene_0400\" \"Gene_0401\" \"Gene_0402\" #>  [403] \"Gene_0403\" \"Gene_0404\" \"Gene_0405\" \"Gene_0406\" \"Gene_0407\" \"Gene_0408\" #>  [409] \"Gene_0409\" \"Gene_0410\" \"Gene_0411\" \"Gene_0412\" \"Gene_0413\" \"Gene_0414\" #>  [415] \"Gene_0415\" \"Gene_0416\" \"Gene_0417\" \"Gene_0418\" \"Gene_0419\" \"Gene_0420\" #>  [421] \"Gene_0421\" \"Gene_0422\" \"Gene_0423\" \"Gene_0424\" \"Gene_0425\" \"Gene_0426\" #>  [427] \"Gene_0427\" \"Gene_0428\" \"Gene_0429\" \"Gene_0430\" \"Gene_0431\" \"Gene_0432\" #>  [433] \"Gene_0433\" \"Gene_0434\" \"Gene_0435\" \"Gene_0436\" \"Gene_0437\" \"Gene_0438\" #>  [439] \"Gene_0439\" \"Gene_0440\" \"Gene_0441\" \"Gene_0442\" \"Gene_0443\" \"Gene_0444\" #>  [445] \"Gene_0445\" \"Gene_0446\" \"Gene_0447\" \"Gene_0448\" \"Gene_0449\" \"Gene_0450\" #>  [451] \"Gene_0451\" \"Gene_0452\" \"Gene_0453\" \"Gene_0454\" \"Gene_0455\" \"Gene_0456\" #>  [457] \"Gene_0457\" \"Gene_0458\" \"Gene_0459\" \"Gene_0460\" \"Gene_0461\" \"Gene_0462\" #>  [463] \"Gene_0463\" \"Gene_0464\" \"Gene_0465\" \"Gene_0466\" \"Gene_0467\" \"Gene_0468\" #>  [469] \"Gene_0469\" \"Gene_0470\" \"Gene_0471\" \"Gene_0472\" \"Gene_0473\" \"Gene_0474\" #>  [475] \"Gene_0475\" \"Gene_0476\" \"Gene_0477\" \"Gene_0478\" \"Gene_0479\" \"Gene_0480\" #>  [481] \"Gene_0481\" \"Gene_0482\" \"Gene_0483\" \"Gene_0484\" \"Gene_0485\" \"Gene_0486\" #>  [487] \"Gene_0487\" \"Gene_0488\" \"Gene_0489\" \"Gene_0490\" \"Gene_0491\" \"Gene_0492\" #>  [493] \"Gene_0493\" \"Gene_0494\" \"Gene_0495\" \"Gene_0496\" \"Gene_0497\" \"Gene_0498\" #>  [499] \"Gene_0499\" \"Gene_0500\" \"Gene_0501\" \"Gene_0502\" \"Gene_0503\" \"Gene_0504\" #>  [505] \"Gene_0505\" \"Gene_0506\" \"Gene_0507\" \"Gene_0508\" \"Gene_0509\" \"Gene_0510\" #>  [511] \"Gene_0511\" \"Gene_0512\" \"Gene_0513\" \"Gene_0514\" \"Gene_0515\" \"Gene_0516\" #>  [517] \"Gene_0517\" \"Gene_0518\" \"Gene_0519\" \"Gene_0520\" \"Gene_0521\" \"Gene_0522\" #>  [523] \"Gene_0523\" \"Gene_0524\" \"Gene_0525\" \"Gene_0526\" \"Gene_0527\" \"Gene_0528\" #>  [529] \"Gene_0529\" \"Gene_0530\" \"Gene_0531\" \"Gene_0532\" \"Gene_0533\" \"Gene_0534\" #>  [535] \"Gene_0535\" \"Gene_0536\" \"Gene_0537\" \"Gene_0538\" \"Gene_0539\" \"Gene_0540\" #>  [541] \"Gene_0541\" \"Gene_0542\" \"Gene_0543\" \"Gene_0544\" \"Gene_0545\" \"Gene_0546\" #>  [547] \"Gene_0547\" \"Gene_0548\" \"Gene_0549\" \"Gene_0550\" \"Gene_0551\" \"Gene_0552\" #>  [553] \"Gene_0553\" \"Gene_0554\" \"Gene_0555\" \"Gene_0556\" \"Gene_0557\" \"Gene_0558\" #>  [559] \"Gene_0559\" \"Gene_0560\" \"Gene_0561\" \"Gene_0562\" \"Gene_0563\" \"Gene_0564\" #>  [565] \"Gene_0565\" \"Gene_0566\" \"Gene_0567\" \"Gene_0568\" \"Gene_0569\" \"Gene_0570\" #>  [571] \"Gene_0571\" \"Gene_0572\" \"Gene_0573\" \"Gene_0574\" \"Gene_0575\" \"Gene_0576\" #>  [577] \"Gene_0577\" \"Gene_0578\" \"Gene_0579\" \"Gene_0580\" \"Gene_0581\" \"Gene_0582\" #>  [583] \"Gene_0583\" \"Gene_0584\" \"Gene_0585\" \"Gene_0586\" \"Gene_0587\" \"Gene_0588\" #>  [589] \"Gene_0589\" \"Gene_0590\" \"Gene_0591\" \"Gene_0592\" \"Gene_0593\" \"Gene_0594\" #>  [595] \"Gene_0595\" \"Gene_0596\" \"Gene_0597\" \"Gene_0598\" \"Gene_0599\" \"Gene_0600\" #>  [601] \"Gene_0601\" \"Gene_0602\" \"Gene_0603\" \"Gene_0604\" \"Gene_0605\" \"Gene_0606\" #>  [607] \"Gene_0607\" \"Gene_0608\" \"Gene_0609\" \"Gene_0610\" \"Gene_0611\" \"Gene_0612\" #>  [613] \"Gene_0613\" \"Gene_0614\" \"Gene_0615\" \"Gene_0616\" \"Gene_0617\" \"Gene_0618\" #>  [619] \"Gene_0619\" \"Gene_0620\" \"Gene_0621\" \"Gene_0622\" \"Gene_0623\" \"Gene_0624\" #>  [625] \"Gene_0625\" \"Gene_0626\" \"Gene_0627\" \"Gene_0628\" \"Gene_0629\" \"Gene_0630\" #>  [631] \"Gene_0631\" \"Gene_0632\" \"Gene_0633\" \"Gene_0634\" \"Gene_0635\" \"Gene_0636\" #>  [637] \"Gene_0637\" \"Gene_0638\" \"Gene_0639\" \"Gene_0640\" \"Gene_0641\" \"Gene_0642\" #>  [643] \"Gene_0643\" \"Gene_0644\" \"Gene_0645\" \"Gene_0646\" \"Gene_0647\" \"Gene_0648\" #>  [649] \"Gene_0649\" \"Gene_0650\" \"Gene_0651\" \"Gene_0652\" \"Gene_0653\" \"Gene_0654\" #>  [655] \"Gene_0655\" \"Gene_0656\" \"Gene_0657\" \"Gene_0658\" \"Gene_0659\" \"Gene_0660\" #>  [661] \"Gene_0661\" \"Gene_0662\" \"Gene_0663\" \"Gene_0664\" \"Gene_0665\" \"Gene_0666\" #>  [667] \"Gene_0667\" \"Gene_0668\" \"Gene_0669\" \"Gene_0670\" \"Gene_0671\" \"Gene_0672\" #>  [673] \"Gene_0673\" \"Gene_0674\" \"Gene_0675\" \"Gene_0676\" \"Gene_0677\" \"Gene_0678\" #>  [679] \"Gene_0679\" \"Gene_0680\" \"Gene_0681\" \"Gene_0682\" \"Gene_0683\" \"Gene_0684\" #>  [685] \"Gene_0685\" \"Gene_0686\" \"Gene_0687\" \"Gene_0688\" \"Gene_0689\" \"Gene_0690\" #>  [691] \"Gene_0691\" \"Gene_0692\" \"Gene_0693\" \"Gene_0694\" \"Gene_0695\" \"Gene_0696\" #>  [697] \"Gene_0697\" \"Gene_0698\" \"Gene_0699\" \"Gene_0700\" \"Gene_0701\" \"Gene_0702\" #>  [703] \"Gene_0703\" \"Gene_0704\" \"Gene_0705\" \"Gene_0706\" \"Gene_0707\" \"Gene_0708\" #>  [709] \"Gene_0709\" \"Gene_0710\" \"Gene_0711\" \"Gene_0712\" \"Gene_0713\" \"Gene_0714\" #>  [715] \"Gene_0715\" \"Gene_0716\" \"Gene_0717\" \"Gene_0718\" \"Gene_0719\" \"Gene_0720\" #>  [721] \"Gene_0721\" \"Gene_0722\" \"Gene_0723\" \"Gene_0724\" \"Gene_0725\" \"Gene_0726\" #>  [727] \"Gene_0727\" \"Gene_0728\" \"Gene_0729\" \"Gene_0730\" \"Gene_0731\" \"Gene_0732\" #>  [733] \"Gene_0733\" \"Gene_0734\" \"Gene_0735\" \"Gene_0736\" \"Gene_0737\" \"Gene_0738\" #>  [739] \"Gene_0739\" \"Gene_0740\" \"Gene_0741\" \"Gene_0742\" \"Gene_0743\" \"Gene_0744\" #>  [745] \"Gene_0745\" \"Gene_0746\" \"Gene_0747\" \"Gene_0748\" \"Gene_0749\" \"Gene_0750\" #>  [751] \"Gene_0751\" \"Gene_0752\" \"Gene_0753\" \"Gene_0754\" \"Gene_0755\" \"Gene_0756\" #>  [757] \"Gene_0757\" \"Gene_0758\" \"Gene_0759\" \"Gene_0760\" \"Gene_0761\" \"Gene_0762\" #>  [763] \"Gene_0763\" \"Gene_0764\" \"Gene_0765\" \"Gene_0766\" \"Gene_0767\" \"Gene_0768\" #>  [769] \"Gene_0769\" \"Gene_0770\" \"Gene_0771\" \"Gene_0772\" \"Gene_0773\" \"Gene_0774\" #>  [775] \"Gene_0775\" \"Gene_0776\" \"Gene_0777\" \"Gene_0778\" \"Gene_0779\" \"Gene_0780\" #>  [781] \"Gene_0781\" \"Gene_0782\" \"Gene_0783\" \"Gene_0784\" \"Gene_0785\" \"Gene_0786\" #>  [787] \"Gene_0787\" \"Gene_0788\" \"Gene_0789\" \"Gene_0790\" \"Gene_0791\" \"Gene_0792\" #>  [793] \"Gene_0793\" \"Gene_0794\" \"Gene_0795\" \"Gene_0796\" \"Gene_0797\" \"Gene_0798\" #>  [799] \"Gene_0799\" \"Gene_0800\" \"Gene_0801\" \"Gene_0802\" \"Gene_0803\" \"Gene_0804\" #>  [805] \"Gene_0805\" \"Gene_0806\" \"Gene_0807\" \"Gene_0808\" \"Gene_0809\" \"Gene_0810\" #>  [811] \"Gene_0811\" \"Gene_0812\" \"Gene_0813\" \"Gene_0814\" \"Gene_0815\" \"Gene_0816\" #>  [817] \"Gene_0817\" \"Gene_0818\" \"Gene_0819\" \"Gene_0820\" \"Gene_0821\" \"Gene_0822\" #>  [823] \"Gene_0823\" \"Gene_0824\" \"Gene_0825\" \"Gene_0826\" \"Gene_0827\" \"Gene_0828\" #>  [829] \"Gene_0829\" \"Gene_0830\" \"Gene_0831\" \"Gene_0832\" \"Gene_0833\" \"Gene_0834\" #>  [835] \"Gene_0835\" \"Gene_0836\" \"Gene_0837\" \"Gene_0838\" \"Gene_0839\" \"Gene_0840\" #>  [841] \"Gene_0841\" \"Gene_0842\" \"Gene_0843\" \"Gene_0844\" \"Gene_0845\" \"Gene_0846\" #>  [847] \"Gene_0847\" \"Gene_0848\" \"Gene_0849\" \"Gene_0850\" \"Gene_0851\" \"Gene_0852\" #>  [853] \"Gene_0853\" \"Gene_0854\" \"Gene_0855\" \"Gene_0856\" \"Gene_0857\" \"Gene_0858\" #>  [859] \"Gene_0859\" \"Gene_0860\" \"Gene_0861\" \"Gene_0862\" \"Gene_0863\" \"Gene_0864\" #>  [865] \"Gene_0865\" \"Gene_0866\" \"Gene_0867\" \"Gene_0868\" \"Gene_0869\" \"Gene_0870\" #>  [871] \"Gene_0871\" \"Gene_0872\" \"Gene_0873\" \"Gene_0874\" \"Gene_0875\" \"Gene_0876\" #>  [877] \"Gene_0877\" \"Gene_0878\" \"Gene_0879\" \"Gene_0880\" \"Gene_0881\" \"Gene_0882\" #>  [883] \"Gene_0883\" \"Gene_0884\" \"Gene_0885\" \"Gene_0886\" \"Gene_0887\" \"Gene_0888\" #>  [889] \"Gene_0889\" \"Gene_0890\" \"Gene_0891\" \"Gene_0892\" \"Gene_0893\" \"Gene_0894\" #>  [895] \"Gene_0895\" \"Gene_0896\" \"Gene_0897\" \"Gene_0898\" \"Gene_0899\" \"Gene_0900\" #>  [901] \"Gene_0901\" \"Gene_0902\" \"Gene_0903\" \"Gene_0904\" \"Gene_0905\" \"Gene_0906\" #>  [907] \"Gene_0907\" \"Gene_0908\" \"Gene_0909\" \"Gene_0910\" \"Gene_0911\" \"Gene_0912\" #>  [913] \"Gene_0913\" \"Gene_0914\" \"Gene_0915\" \"Gene_0916\" \"Gene_0917\" \"Gene_0918\" #>  [919] \"Gene_0919\" \"Gene_0920\" \"Gene_0921\" \"Gene_0922\" \"Gene_0923\" \"Gene_0924\" #>  [925] \"Gene_0925\" \"Gene_0926\" \"Gene_0927\" \"Gene_0928\" \"Gene_0929\" \"Gene_0930\" #>  [931] \"Gene_0931\" \"Gene_0932\" \"Gene_0933\" \"Gene_0934\" \"Gene_0935\" \"Gene_0936\" #>  [937] \"Gene_0937\" \"Gene_0938\" \"Gene_0939\" \"Gene_0940\" \"Gene_0941\" \"Gene_0942\" #>  [943] \"Gene_0943\" \"Gene_0944\" \"Gene_0945\" \"Gene_0946\" \"Gene_0947\" \"Gene_0948\" #>  [949] \"Gene_0949\" \"Gene_0950\" \"Gene_0951\" \"Gene_0952\" \"Gene_0953\" \"Gene_0954\" #>  [955] \"Gene_0955\" \"Gene_0956\" \"Gene_0957\" \"Gene_0958\" \"Gene_0959\" \"Gene_0960\" #>  [961] \"Gene_0961\" \"Gene_0962\" \"Gene_0963\" \"Gene_0964\" \"Gene_0965\" \"Gene_0966\" #>  [967] \"Gene_0967\" \"Gene_0968\" \"Gene_0969\" \"Gene_0970\" \"Gene_0971\" \"Gene_0972\" #>  [973] \"Gene_0973\" \"Gene_0974\" \"Gene_0975\" \"Gene_0976\" \"Gene_0977\" \"Gene_0978\" #>  [979] \"Gene_0979\" \"Gene_0980\" \"Gene_0981\" \"Gene_0982\" \"Gene_0983\" \"Gene_0984\" #>  [985] \"Gene_0985\" \"Gene_0986\" \"Gene_0987\" \"Gene_0988\" \"Gene_0989\" \"Gene_0990\" #>  [991] \"Gene_0991\" \"Gene_0992\" \"Gene_0993\" \"Gene_0994\" \"Gene_0995\" \"Gene_0996\" #>  [997] \"Gene_0997\" \"Gene_0998\" \"Gene_0999\" \"Gene_1000\""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_sce_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get object metadata — get_sce_metadata","title":"Get object metadata — get_sce_metadata","text":"Get object metadata","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_sce_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get object metadata — get_sce_metadata","text":"","code":"get_sce_metadata(object)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_sce_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get object metadata — get_sce_metadata","text":"object SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_sce_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get object metadata — get_sce_metadata","text":"variable features SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_transcripts_from_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Transcripts in object — get_transcripts_from_sce","title":"Get Transcripts in object — get_transcripts_from_sce","text":"Get transcript ids objects one gene interest","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_transcripts_from_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Transcripts in object — get_transcripts_from_sce","text":"","code":"get_transcripts_from_sce(object, gene)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_transcripts_from_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Transcripts in object — get_transcripts_from_sce","text":"object SingleCellExperiment object gene Gene interest","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_transcripts_from_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Transcripts in object — get_transcripts_from_sce","text":"transcripts constituting gene interest SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_variable_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable features — get_variable_features","title":"Get variable features — get_variable_features","text":"Get variable features","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_variable_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable features — get_variable_features","text":"","code":"get_variable_features(object, experiment = \"gene\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_variable_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable features — get_variable_features","text":"object SingleCellExperiment object experiment \"gene\" \"transcript\"","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_variable_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable features — get_variable_features","text":"variable features SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/get_variable_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get variable features — get_variable_features","text":"","code":"data(small_example_dataset) get_variable_features(small_example_dataset) #>   [1] \"Gene_0399\" \"Gene_0160\" \"Gene_0415\" \"Gene_0142\" \"Gene_0851\" \"Gene_0707\" #>   [7] \"Gene_0011\" \"Gene_0985\" \"Gene_0939\" \"Gene_0365\" \"Gene_0373\" \"Gene_0877\" #>  [13] \"Gene_0378\" \"Gene_0842\" \"Gene_0859\" \"Gene_0740\" \"Gene_0716\" \"Gene_0493\" #>  [19] \"Gene_0336\" \"Gene_0012\" \"Gene_0613\" \"Gene_0271\" \"Gene_0339\" \"Gene_0302\" #>  [25] \"Gene_0077\" \"Gene_0910\" \"Gene_0109\" \"Gene_0757\" \"Gene_0580\" \"Gene_0211\" #>  [31] \"Gene_0313\" \"Gene_0300\" \"Gene_0581\" \"Gene_0144\" \"Gene_0609\" \"Gene_0054\" #>  [37] \"Gene_0016\" \"Gene_0896\" \"Gene_0482\" \"Gene_0186\" \"Gene_0798\" \"Gene_0658\" #>  [43] \"Gene_0116\" \"Gene_0591\" \"Gene_0295\" \"Gene_0646\" \"Gene_0605\" \"Gene_0387\" #>  [49] \"Gene_0924\" \"Gene_0083\" \"Gene_0014\" \"Gene_0813\" \"Gene_0243\" \"Gene_0578\" #>  [55] \"Gene_0311\" \"Gene_0977\" \"Gene_0611\" \"Gene_0427\" \"Gene_0412\" \"Gene_0895\" #>  [61] \"Gene_0126\" \"Gene_0994\" \"Gene_0308\" \"Gene_0835\" \"Gene_0226\" \"Gene_0050\" #>  [67] \"Gene_0494\" \"Gene_0853\" \"Gene_0540\" \"Gene_0031\" \"Gene_0333\" \"Gene_0747\" #>  [73] \"Gene_0729\" \"Gene_0655\" \"Gene_0118\" \"Gene_0318\" \"Gene_0499\" \"Gene_0207\" #>  [79] \"Gene_0163\" \"Gene_0048\" \"Gene_0870\" \"Gene_0964\" \"Gene_0983\" \"Gene_0251\" #>  [85] \"Gene_0458\" \"Gene_0319\" \"Gene_0276\" \"Gene_0145\" \"Gene_0208\" \"Gene_0972\" #>  [91] \"Gene_0525\" \"Gene_0505\" \"Gene_0999\" \"Gene_0329\" \"Gene_0238\" \"Gene_0315\" #>  [97] \"Gene_0268\" \"Gene_0192\" \"Gene_0799\" \"Gene_0600\" \"Gene_0266\" \"Gene_0626\" #> [103] \"Gene_0872\" \"Gene_0588\" \"Gene_0217\" \"Gene_0621\" \"Gene_0148\" \"Gene_0293\" #> [109] \"Gene_0957\" \"Gene_0816\" \"Gene_0607\" \"Gene_0570\" \"Gene_0335\" \"Gene_0430\" #> [115] \"Gene_0669\" \"Gene_0963\" \"Gene_0270\" \"Gene_0537\" \"Gene_0179\" \"Gene_0692\" #> [121] \"Gene_0057\" \"Gene_0395\" \"Gene_0713\" \"Gene_0172\" \"Gene_0009\" \"Gene_0466\" #> [127] \"Gene_0922\" \"Gene_0010\" \"Gene_0060\" \"Gene_0597\" \"Gene_0110\" \"Gene_0375\" #> [133] \"Gene_0310\" \"Gene_0260\" \"Gene_0714\" \"Gene_0602\" \"Gene_0013\" \"Gene_0754\" #> [139] \"Gene_0687\" \"Gene_0345\" \"Gene_0120\" \"Gene_0610\" \"Gene_0568\" \"Gene_0469\" #> [145] \"Gene_0370\" \"Gene_0680\" \"Gene_0954\" \"Gene_0232\" \"Gene_0899\" \"Gene_0622\" #> [151] \"Gene_0096\" \"Gene_0193\" \"Gene_0289\" \"Gene_0065\" \"Gene_0056\" \"Gene_0461\" #> [157] \"Gene_0414\" \"Gene_0122\" \"Gene_0087\" \"Gene_0212\" \"Gene_0941\" \"Gene_0796\" #> [163] \"Gene_0604\" \"Gene_0164\" \"Gene_0818\" \"Gene_0735\" \"Gene_0864\" \"Gene_0638\" #> [169] \"Gene_0989\" \"Gene_0942\" \"Gene_0327\" \"Gene_0131\" \"Gene_0841\" \"Gene_0801\" #> [175] \"Gene_0718\" \"Gene_0815\" \"Gene_0755\" \"Gene_0214\" \"Gene_0455\" \"Gene_0837\" #> [181] \"Gene_0512\" \"Gene_0723\" \"Gene_0881\" \"Gene_0750\" \"Gene_0478\" \"Gene_0146\" #> [187] \"Gene_0267\" \"Gene_0592\" \"Gene_0246\" \"Gene_0633\" \"Gene_0180\" \"Gene_0577\" #> [193] \"Gene_0653\" \"Gene_0448\" \"Gene_0928\" \"Gene_0344\" \"Gene_0748\" \"Gene_0105\" #> [199] \"Gene_0357\" \"Gene_0768\" \"Gene_0456\" \"Gene_0090\" \"Gene_0719\" \"Gene_0316\" #> [205] \"Gene_0247\" \"Gene_0037\" \"Gene_0406\" \"Gene_0515\" \"Gene_0513\" \"Gene_0619\" #> [211] \"Gene_0635\" \"Gene_0487\" \"Gene_0866\" \"Gene_0119\" \"Gene_0937\" \"Gene_0157\" #> [217] \"Gene_0058\" \"Gene_0129\" \"Gene_0863\" \"Gene_0560\" \"Gene_0498\" \"Gene_0500\" #> [223] \"Gene_0987\" \"Gene_0436\" \"Gene_0504\" \"Gene_0027\" \"Gene_0265\" \"Gene_0325\" #> [229] \"Gene_0547\" \"Gene_0133\" \"Gene_0320\" \"Gene_0039\" \"Gene_0878\" \"Gene_0040\" #> [235] \"Gene_0817\" \"Gene_0104\" \"Gene_0524\" \"Gene_0579\" \"Gene_0695\" \"Gene_0281\" #> [241] \"Gene_0644\" \"Gene_0242\" \"Gene_0603\" \"Gene_0761\" \"Gene_0269\" \"Gene_0873\" #> [247] \"Gene_0471\" \"Gene_0518\" \"Gene_0948\" \"Gene_0867\" \"Gene_0965\" \"Gene_0733\" #> [253] \"Gene_0668\" \"Gene_0725\" \"Gene_0044\" \"Gene_0936\" \"Gene_0684\" \"Gene_0906\" #> [259] \"Gene_0541\" \"Gene_0170\" \"Gene_0348\" \"Gene_0784\" \"Gene_0850\" \"Gene_0509\" #> [265] \"Gene_0304\" \"Gene_0552\" \"Gene_0385\" \"Gene_0381\" \"Gene_0929\" \"Gene_0351\" #> [271] \"Gene_0121\" \"Gene_0794\" \"Gene_0443\" \"Gene_0291\" \"Gene_0787\" \"Gene_0063\" #> [277] \"Gene_0490\" \"Gene_0230\" \"Gene_0736\" \"Gene_0285\" \"Gene_0424\" \"Gene_0204\" #> [283] \"Gene_0897\" \"Gene_0400\" \"Gene_0262\" \"Gene_0417\" \"Gene_0114\" \"Gene_0352\" #> [289] \"Gene_0045\" \"Gene_0346\" \"Gene_0124\" \"Gene_0616\" \"Gene_0041\" \"Gene_0404\" #> [295] \"Gene_0034\" \"Gene_0968\" \"Gene_0190\" \"Gene_0321\" \"Gene_0130\" \"Gene_0075\" #> [301] \"Gene_0771\" \"Gene_0590\" \"Gene_0949\" \"Gene_0418\" \"Gene_0362\" \"Gene_0614\" #> [307] \"Gene_0712\" \"Gene_0702\" \"Gene_0282\" \"Gene_0483\" \"Gene_0548\" \"Gene_0988\" #> [313] \"Gene_0637\" \"Gene_0628\" \"Gene_0886\" \"Gene_0884\" \"Gene_0421\" \"Gene_0006\" #> [319] \"Gene_0900\" \"Gene_1000\" \"Gene_0506\" \"Gene_0738\" \"Gene_0407\" \"Gene_0724\" #> [325] \"Gene_0811\" \"Gene_0912\" \"Gene_0793\" \"Gene_0883\" \"Gene_0576\" \"Gene_0496\" #> [331] \"Gene_0809\" \"Gene_0474\" \"Gene_0973\" \"Gene_0741\" \"Gene_0220\" \"Gene_0042\" #> [337] \"Gene_0976\" \"Gene_0533\" \"Gene_0595\" \"Gene_0210\" \"Gene_0453\" \"Gene_0829\" #> [343] \"Gene_0015\" \"Gene_0005\" \"Gene_0434\" \"Gene_0650\" \"Gene_0389\" \"Gene_0759\" #> [349] \"Gene_0432\" \"Gene_0700\" \"Gene_0094\" \"Gene_0559\" \"Gene_0814\" \"Gene_0203\" #> [355] \"Gene_0848\" \"Gene_0693\" \"Gene_0420\" \"Gene_0731\" \"Gene_0944\" \"Gene_0468\" #> [361] \"Gene_0566\" \"Gene_0671\" \"Gene_0645\" \"Gene_0393\" \"Gene_0495\" \"Gene_0772\" #> [367] \"Gene_0097\" \"Gene_0272\" \"Gene_0264\" \"Gene_0035\" \"Gene_0440\" \"Gene_0022\" #> [373] \"Gene_0667\" \"Gene_0557\" \"Gene_0079\" \"Gene_0298\" \"Gene_0681\" \"Gene_0023\" #> [379] \"Gene_0686\" \"Gene_0503\" \"Gene_0542\" \"Gene_0347\" \"Gene_0935\" \"Gene_0534\" #> [385] \"Gene_0940\" \"Gene_0202\" \"Gene_0917\" \"Gene_0403\" \"Gene_0785\" \"Gene_0990\" #> [391] \"Gene_0905\" \"Gene_0425\" \"Gene_0938\" \"Gene_0061\" \"Gene_0106\" \"Gene_0907\" #> [397] \"Gene_0911\" \"Gene_0909\" \"Gene_0966\" \"Gene_0933\" \"Gene_0205\" \"Gene_0199\" #> [403] \"Gene_0699\" \"Gene_0766\" \"Gene_0156\" \"Gene_0845\" \"Gene_0984\" \"Gene_0402\" #> [409] \"Gene_0956\" \"Gene_0527\" \"Gene_0889\" \"Gene_0648\" \"Gene_0457\" \"Gene_0235\" #> [415] \"Gene_0764\" \"Gene_0147\" \"Gene_0773\" \"Gene_0342\" \"Gene_0149\" \"Gene_0001\" #> [421] \"Gene_0898\" \"Gene_0441\" \"Gene_0528\" \"Gene_0323\" \"Gene_0625\" \"Gene_0674\" #> [427] \"Gene_0331\" \"Gene_0066\" \"Gene_0781\" \"Gene_0447\" \"Gene_0484\" \"Gene_0587\" #> [433] \"Gene_0454\" \"Gene_0762\" \"Gene_0737\" \"Gene_0952\" \"Gene_0620\" \"Gene_0752\" #> [439] \"Gene_0123\" \"Gene_0252\" \"Gene_0697\" \"Gene_0492\" \"Gene_0371\" \"Gene_0573\" #> [445] \"Gene_0368\" \"Gene_0823\" \"Gene_0779\" \"Gene_0024\" \"Gene_0970\" \"Gene_0879\" #> [451] \"Gene_0961\" \"Gene_0411\" \"Gene_0776\" \"Gene_0831\" \"Gene_0715\" \"Gene_0543\" #> [457] \"Gene_0261\" \"Gene_0763\" \"Gene_0783\" \"Gene_0670\" \"Gene_0947\" \"Gene_0292\" #> [463] \"Gene_0531\" \"Gene_0744\" \"Gene_0143\" \"Gene_0862\" \"Gene_0847\" \"Gene_0374\" #> [469] \"Gene_0136\" \"Gene_0556\" \"Gene_0530\" \"Gene_0139\" \"Gene_0086\" \"Gene_0033\" #> [475] \"Gene_0861\" \"Gene_0274\" \"Gene_0769\" \"Gene_0932\" \"Gene_0857\" \"Gene_0062\" #> [481] \"Gene_0925\" \"Gene_0649\" \"Gene_0464\" \"Gene_0986\" \"Gene_0508\" \"Gene_0826\" #> [487] \"Gene_0544\" \"Gene_0354\" \"Gene_0481\" \"Gene_0158\" \"Gene_0472\" \"Gene_0992\" #> [493] \"Gene_0852\" \"Gene_0047\" \"Gene_0166\" \"Gene_0059\" \"Gene_0165\""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38.html","id":null,"dir":"Reference","previous_headings":"","what":"Human annotation data — grch38","title":"Human annotation data — grch38","text":"Human (Homo sapiens) annotations based genome assembly GRCH38 Ensembl.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human annotation data — grch38","text":"","code":"grch38"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human annotation data — grch38","text":"object class tbl_df (inherits tbl, data.frame) 76062 rows 9 columns.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human annotation data — grch38","text":"http://ensembl.org/homo_sapiens","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Human annotation data — grch38","text":"Variables: ensgene entrez symbol chr start end strand biotype description","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Human annotation data — grch38","text":"","code":"data(\"grch38\") head(grch38) #> # A tibble: 6 × 9 #>   ensgene         entrez symbol chr      start    end strand biotype description #>   <chr>            <int> <chr>  <chr>    <int>  <int>  <int> <chr>   <chr>       #> 1 ENSG00000000003   7105 TSPAN6 X       1.01e8 1.01e8     -1 protei… tetraspani… #> 2 ENSG00000000005  64102 TNMD   X       1.01e8 1.01e8      1 protei… tenomodulin #> 3 ENSG00000000419   8813 DPM1   20      5.09e7 5.10e7     -1 protei… dolichyl-p… #> 4 ENSG00000000457  57147 SCYL3  1       1.70e8 1.70e8     -1 protei… SCY1 like … #> 5 ENSG00000000460  55732 FIRRM  1       1.70e8 1.70e8      1 protei… FIGNL1 int… #> 6 ENSG00000000938   2268 FGR    1       2.76e7 2.76e7     -1 protei… FGR proto-…"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38_tx2gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Human transcripts to genes — grch38_tx2gene","title":"Human transcripts to genes — grch38_tx2gene","text":"Lookup table converting Human (Homo sapiens) Ensembl transcript IDs gene IDs based genome assembly GRCH38 Ensembl.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38_tx2gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human transcripts to genes — grch38_tx2gene","text":"","code":"grch38_tx2gene"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38_tx2gene.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human transcripts to genes — grch38_tx2gene","text":"object class tbl_df (inherits tbl, data.frame) 277081 rows 2 columns.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38_tx2gene.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human transcripts to genes — grch38_tx2gene","text":"http://ensembl.org/homo_sapiens","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38_tx2gene.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Human transcripts to genes — grch38_tx2gene","text":"Variables: enstxp ensgene","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/grch38_tx2gene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Human transcripts to genes — grch38_tx2gene","text":"","code":"data(grch38_tx2gene) head(grch38_tx2gene) #> # A tibble: 6 × 2 #>   enstxp          ensgene         #>   <chr>           <chr>           #> 1 ENST00000373020 ENSG00000000003 #> 2 ENST00000612152 ENSG00000000003 #> 3 ENST00000496771 ENSG00000000003 #> 4 ENST00000494424 ENSG00000000003 #> 5 ENST00000373031 ENSG00000000005 #> 6 ENST00000485971 ENSG00000000005"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/human_to_mouse_homologs.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"Homologs drawn Biomart","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/human_to_mouse_homologs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"","code":"human_to_mouse_homologs"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/human_to_mouse_homologs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"data frame 23188 rows 2 columns HGNC.symbol human gene symbols MGI.symbol mouse gene symbols","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/human_to_mouse_homologs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"bioMart","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Correct Multiple Single Cell Objects — integrate","title":"Batch Correct Multiple Single Cell Objects — integrate","text":"Batch Correct Multiple Single Cell Objects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Correct Multiple Single Cell Objects — integrate","text":"","code":"integrate(sce_list, organism = \"human\", ...)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Correct Multiple Single Cell Objects — integrate","text":"sce_list List two SingleCellExperiment objects organism human mouse ... extra args passed sce_reduce_dimensions","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/integrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Correct Multiple Single Cell Objects — integrate","text":"integrated SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/integration_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Integration Workflow — integration_workflow","title":"Integration Workflow — integration_workflow","text":"Integrate multiple objects save file","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/integration_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integration Workflow — integration_workflow","text":"","code":"integration_workflow(   batches,   excluded_cells = NULL,   resolution = seq(0.2, 1, by = 0.2),   experiment_name = \"default_experiment\",   organism = \"human\",   ... )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/integration_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integration Workflow — integration_workflow","text":"batches objects batches provided list. named, resulting integrated object identified corresponding values 'batch' metadata excluded_cells named list cells exclude resolution value(s) control clustering resolution via scran::findMarkers experiment_name arbitrary name identify experiment organism either \"human\" \"mouse\" ... extra args passed sce_integrate","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/integration_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integration Workflow — integration_workflow","text":"integrated SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_bigwigs.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Bigwigs — load_bigwigs","title":"Load Bigwigs — load_bigwigs","text":"Load tibble bigwig file paths cell id","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_bigwigs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Bigwigs — load_bigwigs","text":"","code":"load_bigwigs(object, bigwig_db = \"~/.cache/chevreul/bw-files.db\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_bigwigs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Bigwigs — load_bigwigs","text":"object object bigwig_db Sqlite database bigwig files","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_bigwigs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Bigwigs — load_bigwigs","text":"vector bigwigs file paths","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_sce_from_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"Load SingleCellExperiment Files from a single project path — load_sce_from_proj","title":"Load SingleCellExperiment Files from a single project path — load_sce_from_proj","text":"Load SingleCellExperiment Files single project path","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_sce_from_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load SingleCellExperiment Files from a single project path — load_sce_from_proj","text":"","code":"load_sce_from_proj(proj_dir, ...)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_sce_from_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load SingleCellExperiment Files from a single project path — load_sce_from_proj","text":"proj_dir project directory ... extra args passed load_sce_path","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_sce_from_proj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load SingleCellExperiment Files from a single project path — load_sce_from_proj","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_sce_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in Gene and Transcript SingleCellExperiment Objects — load_sce_path","title":"Read in Gene and Transcript SingleCellExperiment Objects — load_sce_path","text":"Read Gene Transcript SingleCellExperiment Objects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_sce_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in Gene and Transcript SingleCellExperiment Objects — load_sce_path","text":"","code":"load_sce_path(proj_dir = getwd(), prefix = \"unfiltered\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_sce_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in Gene and Transcript SingleCellExperiment Objects — load_sce_path","text":"proj_dir path project directory prefix default \"unfiltered\"","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/load_sce_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in Gene and Transcript SingleCellExperiment Objects — load_sce_path","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/make_bigwig_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Bigwig Database — make_bigwig_db","title":"Make Bigwig Database — make_bigwig_db","text":"Make Bigwig Database","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/make_bigwig_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Bigwig Database — make_bigwig_db","text":"","code":"make_bigwig_db(   new_project = NULL,   cache_location = \"~/.cache/chevreul/\",   sqlite_db = \"bw-files.db\" )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/make_bigwig_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Bigwig Database — make_bigwig_db","text":"new_project Project directory cache_location Path cache \"~/.cache/chevreul\" sqlite_db sqlite db containing bw files","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/make_bigwig_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Bigwig Database — make_bigwig_db","text":"sqlite database bigwig files cells SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/medium_example_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Medium example SingleCellExperiment — medium_example_dataset","title":"Medium example SingleCellExperiment — medium_example_dataset","text":"subset 200 genes chevreuldata::human_gene_transcript_sce()","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/medium_example_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Medium example SingleCellExperiment — medium_example_dataset","text":"","code":"medium_example_dataset"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/medium_example_dataset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Medium example SingleCellExperiment — medium_example_dataset","text":"SingleCellExperiment 200 genes","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/medium_example_dataset.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Medium example SingleCellExperiment — medium_example_dataset","text":"chevreuldata::human_gene_transcript_sce()","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/merge_small_sces.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Small SingleCellExperiment Objects — merge_small_sces","title":"Merge Small SingleCellExperiment Objects — merge_small_sces","text":"Merge Small SingleCellExperiment Objects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/merge_small_sces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Small SingleCellExperiment Objects — merge_small_sces","text":"","code":"merge_small_sces(..., k.filter = 30)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/merge_small_sces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Small SingleCellExperiment Objects — merge_small_sces","text":"... two singlecell objects k.filter minimum cell number integration","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/merge_small_sces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Small SingleCellExperiment Objects — merge_small_sces","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/metadata_from_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Metadata from Batch — metadata_from_batch","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"Retrieve Metadata Batch","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/metadata_from_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"","code":"metadata_from_batch(   batch,   projects_dir = \"/dataVolume/storage/single_cell_projects\",   db_path = \"single-cell-projects.db\" )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/metadata_from_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"batch batch projects_dir path project dir db_path path .db file","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/metadata_from_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"tibble cell level metadata SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/propagate_spreadsheet_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"Propagate Metadata Changes — propagate_spreadsheet_changes","title":"Propagate Metadata Changes — propagate_spreadsheet_changes","text":"Propagate Metadata Changes","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/propagate_spreadsheet_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propagate Metadata Changes — propagate_spreadsheet_changes","text":"","code":"propagate_spreadsheet_changes(meta, object)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/propagate_spreadsheet_changes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propagate Metadata Changes — propagate_spreadsheet_changes","text":"meta updated metadata object SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/propagate_spreadsheet_changes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Propagate Metadata Changes — propagate_spreadsheet_changes","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/propagate_spreadsheet_changes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Propagate Metadata Changes — propagate_spreadsheet_changes","text":"","code":"data(small_example_dataset) new_meta <- data.frame(row.names = colnames(small_example_dataset)) new_meta$example <- \"example\"  propagate_spreadsheet_changes(new_meta, small_example_dataset) #> class: SingleCellExperiment  #> dim: 1000 200  #> metadata(1): markers #> assays(2): counts logcounts #> rownames(1000): Gene_0001 Gene_0002 ... Gene_0999 Gene_1000 #> rowData names(0): #> colnames(200): Cell_001 Cell_002 ... Cell_199 Cell_200 #> colData names(1): example #> reducedDimNames(3): PCA TSNE UMAP #> mainExpName: gene #> altExpNames(1): Spikes"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/query_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Experiment — query_experiment","title":"Query Experiment — query_experiment","text":"Query Experiment","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/query_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Experiment — query_experiment","text":"","code":"query_experiment(object, experiment)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/query_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Experiment — query_experiment","text":"object SingleCellExperiment object experiment experiment name","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/query_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query Experiment — query_experiment","text":"logical scalar indicating experiment present object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/query_experiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query Experiment — query_experiment","text":"","code":"data(small_example_dataset) query_experiment(small_example_dataset, \"gene\") #> [1] TRUE"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/read_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a database of chevreul projects — read_project_db","title":"Read a database of chevreul projects — read_project_db","text":"Reads database chevreul projects data frame","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/read_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a database of chevreul projects — read_project_db","text":"","code":"read_project_db(   cache_location = \"~/.cache/chevreul\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/read_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a database of chevreul projects — read_project_db","text":"cache_location Path cache \"~/.cache/chevreul\" sqlite_db sqlite db verbose print messages","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/read_project_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a database of chevreul projects — read_project_db","text":"tibble SingleCellExperiment objects","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/record_experiment_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Record Experiment Metadata — record_experiment_data","title":"Record Experiment Metadata — record_experiment_data","text":"Records miscellaneous data","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/record_experiment_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record Experiment Metadata — record_experiment_data","text":"","code":"record_experiment_data(   object,   experiment_name = \"default_experiment\",   organism = \"human\" )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/record_experiment_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record Experiment Metadata — record_experiment_data","text":"object object experiment_name name experiment organism human mouse","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/record_experiment_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record Experiment Metadata — record_experiment_data","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/record_experiment_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record Experiment Metadata — record_experiment_data","text":"","code":"data(small_example_dataset) record_experiment_data(small_example_dataset) #> [01:59:42  #> Logging Technical Details... #> class: SingleCellExperiment  #> dim: 1000 200  #> metadata(2): markers experiment #> assays(2): counts logcounts #> rownames(1000): Gene_0001 Gene_0002 ... Gene_0999 Gene_1000 #> rowData names(0): #> colnames(200): Cell_001 Cell_002 ... Cell_199 Cell_200 #> colData names(9): Mutation_Status Cell_Cycle ... gene_snn_res.0.8 #>   gene_snn_res.1 #> reducedDimNames(3): PCA TSNE UMAP #> mainExpName: gene #> altExpNames(1): Spikes"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/regress_cell_cycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Regress SingleCellExperiment Object by Given Set of Genes — regress_cell_cycle","title":"Regress SingleCellExperiment Object by Given Set of Genes — regress_cell_cycle","text":"Regress SingleCellExperiment Object Given Set Genes","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/regress_cell_cycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regress SingleCellExperiment Object by Given Set of Genes — regress_cell_cycle","text":"","code":"regress_cell_cycle(object)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/regress_cell_cycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regress SingleCellExperiment Object by Given Set of Genes — regress_cell_cycle","text":"object object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/regress_cell_cycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regress SingleCellExperiment Object by Given Set of Genes — regress_cell_cycle","text":"SingleCellExperiment object features regressed","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/reintegrate_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Reintegrate (filtered) SingleCellExperiment objects — reintegrate_sce","title":"Reintegrate (filtered) SingleCellExperiment objects — reintegrate_sce","text":"function takes SCE object performs steps split batch integrate run integration pipeline save","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/reintegrate_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reintegrate (filtered) SingleCellExperiment objects — reintegrate_sce","text":"","code":"reintegrate_sce(object, suffix = \"\", reduction = \"PCA\", ...)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/reintegrate_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reintegrate (filtered) SingleCellExperiment objects — reintegrate_sce","text":"object SingleCellExperiment objects suffix appended file saved output dir reduction use default pca ... extra args passed sce_integrate","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/reintegrate_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reintegrate (filtered) SingleCellExperiment objects — reintegrate_sce","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/retrieve_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Assay — retrieve_experiment","title":"Retrieve Assay — retrieve_experiment","text":"Retrieve Assay","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/retrieve_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Assay — retrieve_experiment","text":"","code":"retrieve_experiment(object, experiment)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/retrieve_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Assay — retrieve_experiment","text":"object SingleCellExperiment object experiment experiment name","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/retrieve_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Assay — retrieve_experiment","text":"Main alt experiment SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/save_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Save object to /output/sce/_sce.rds — save_sce","title":"Save object to /output/sce/_sce.rds — save_sce","text":"Save object /output/sce/_sce.rds","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/save_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save object to /output/sce/_sce.rds — save_sce","text":"","code":"save_sce(object, prefix = \"unfiltered\", proj_dir = getwd())"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/save_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save object to /output/sce/_sce.rds — save_sce","text":"object SingleCellExperiment object prefix prefix saving proj_dir path project directory","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/save_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save object to /output/sce/_sce.rds — save_sce","text":"path rds file containing SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_calcn.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Read Count Metrics for a object — sce_calcn","title":"Calculate Read Count Metrics for a object — sce_calcn","text":"Recalculate counts/features per cell object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_calcn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Read Count Metrics for a object — sce_calcn","text":"","code":"sce_calcn(object)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_calcn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Read Count Metrics for a object — sce_calcn","text":"object SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_calcn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Read Count Metrics for a object — sce_calcn","text":"SingleCellExperiment object nfeatures ngenes stored metadata","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_calcn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Read Count Metrics for a object — sce_calcn","text":"","code":"data(small_example_dataset) sce_calcn(small_example_dataset) #> class: SingleCellExperiment  #> dim: 1000 200  #> metadata(1): markers #> assays(2): counts logcounts #> rownames(1000): Gene_0001 Gene_0002 ... Gene_0999 Gene_1000 #> rowData names(0): #> colnames(200): Cell_001 Cell_002 ... Cell_199 Cell_200 #> colData names(17): Mutation_Status Cell_Cycle ... nFeature_gene #>   nCount_gene #> reducedDimNames(3): PCA TSNE UMAP #> mainExpName: gene #> altExpNames(1): Spikes"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Louvain Clustering at Multiple Resolutions — sce_cluster","title":"Run Louvain Clustering at Multiple Resolutions — sce_cluster","text":"Run Louvain Clustering Multiple Resolutions","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Louvain Clustering at Multiple Resolutions — sce_cluster","text":"","code":"sce_cluster(   object = object,   resolution = 0.6,   custom_clust = NULL,   reduction = \"PCA\",   algorithm = 1,   ... )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Louvain Clustering at Multiple Resolutions — sce_cluster","text":"object SingleCellExperiment objects resolution Clustering resolution custom_clust custom cluster reduction Set dimensional reduction object algorithm 1 ... extra args passed single cell packages","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Louvain Clustering at Multiple Resolutions — sce_cluster","text":"SingleCellExperiment object louvain clusters","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Louvain Clustering at Multiple Resolutions — sce_cluster","text":"","code":"data(small_example_dataset) sce_cluster(small_example_dataset) #> [01:59:44] Clustering Cells... #> clustering at 0.6 resolution #> class: SingleCellExperiment  #> dim: 1000 200  #> metadata(1): markers #> assays(2): counts logcounts #> rownames(1000): Gene_0001 Gene_0002 ... Gene_0999 Gene_1000 #> rowData names(0): #> colnames(200): Cell_001 Cell_002 ... Cell_199 Cell_200 #> colData names(9): Mutation_Status Cell_Cycle ... gene_snn_res.0.8 #>   gene_snn_res.1 #> reducedDimNames(3): PCA TSNE UMAP #> mainExpName: gene #> altExpNames(1): Spikes"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_clustering_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering Workflow — sce_clustering_workflow","title":"Clustering Workflow — sce_clustering_workflow","text":"Cluster Reduce Dimensions object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_clustering_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering Workflow — sce_clustering_workflow","text":"","code":"sce_clustering_workflow(   object,   excluded_cells,   resolution = seq(0.2, 1, by = 0.2),   organism = \"human\",   experiment_name = \"default_experiment\",   ... )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_clustering_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering Workflow — sce_clustering_workflow","text":"object SingleCellExperiment object excluded_cells named list cells exclude resolution resolution(s) use clustering cells organism Organism experiment_name name experiment ... extra args passed sce_process","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_clustering_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clustering Workflow — sce_clustering_workflow","text":"clustered SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_clustering_workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clustering Workflow — sce_clustering_workflow","text":"","code":"data(\"small_example_dataset\") sce_clustering_workflow(small_example_dataset, experiment_name = \"tiny_sce\",  organism = \"human\") #> Warning: You're computing too large a percentage of total singular values, use a standard svd instead. #> [01:59:49] Clustering Cells... #> clustering at 0.2 resolution #> clustering at 0.4 resolution #> clustering at 0.6 resolution #> clustering at 0.8 resolution #> clustering at 1 resolution #> stashing markers for gene_snn_res.1 #> [01:59:50  #> Logging Technical Details..."},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_de.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Differential Expression — sce_de","title":"Run Differential Expression — sce_de","text":"Run Differential Expression","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_de.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Differential Expression — sce_de","text":"","code":"sce_de(   object,   cluster1,   cluster2,   resolution = 0.2,   diffex_scheme = \"louvain\",   featureType = \"gene\",   tests = c(\"t\", \"wilcox\", \"bimod\") )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_de.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Differential Expression — sce_de","text":"object SingleCellExperiment object cluster1 cluster 1 cluster2 cluster 2 resolution resolution diffex_scheme scheme differential expression featureType gene transcript tests t, wilcox, bimod","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_de.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Differential Expression — sce_de","text":"dataframe differential expression information","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_de.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Differential Expression — sce_de","text":"","code":"data(\"tiny_sce\") sce_de(tiny_sce,  colnames(tiny_sce)[1:100],  colnames(tiny_sce)[101:200],  diffex_scheme = \"custom\") #> t #> $t #>            ensgene symbol        p_val avg_log2FC    p_val_adj #> 1  ENSG00000143320 CRABP2 2.822649e-07  1.9728456 2.822649e-06 #> 2  ENSG00000127928  GNGT1 4.724220e-06 -1.9559872 2.362110e-05 #> 3  ENSG00000130561    SAG 3.558212e-05 -1.6333148 1.186071e-04 #> 4  ENSG00000281857    SAG 3.558212e-05 -1.6333148 1.186071e-04 #> 5  ENSG00000114349  GNAT1 9.276651e-05 -1.7262036 2.319163e-04 #> 6  ENSG00000139053  PDE6H 2.870684e-02  1.1588754 5.741368e-02 #> 7  ENSG00000138472 GUCA1C 1.310718e-01 -0.6823109 2.184530e-01 #> 8  ENSG00000129535    NRL 2.213987e-01 -0.4964604 2.828659e-01 #> 9  ENSG00000285493    NRL 2.213987e-01 -0.4964604 2.828659e-01 #> 10 ENSG00000170345    FOS 2.262927e-01  0.4617879 2.828659e-01 #> 11 ENSG00000120500   ARR3 6.327603e-01  0.2353529 7.030670e-01 #> 12 ENSG00000048545 GUCA1A 7.469100e-01  0.1555255 7.469100e-01 #>"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SingleCellExperiment Integration — sce_integrate","title":"Run SingleCellExperiment Integration — sce_integrate","text":"Run batch correction, followed : stashing batches metadata 'batch' clustering resolution 0.2 2.0 increments 0.2 saving <proj_dir>/output/sce/sce.rds","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SingleCellExperiment Integration — sce_integrate","text":"","code":"sce_integrate(   sce_list,   resolution = seq(0.2, 1, by = 0.2),   suffix = \"\",   organism = \"human\",   batch_correct = TRUE,   annotate_cell_cycle = FALSE,   annotate_percent_mito = FALSE,   reduction = \"corrected\",   ... )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SingleCellExperiment Integration — sce_integrate","text":"sce_list List objects integrated resolution Range resolution suffix suffix appended file save output dir organism Default \"human\" batch_correct whether integrate batch correction annotate_cell_cycle whether score cell cycle phases annotate_percent_mito logical scalar whether annotate mitochondrial percentage reduction pca, umap, tsne ... extra args passed integrate","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_integrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run SingleCellExperiment Integration — sce_integrate","text":"integrated SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_integrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run SingleCellExperiment Integration — sce_integrate","text":"","code":"data(\"tiny_sce\") tiny_sce |>  splitByCol(\"bath\") |>  sce_integrate(resolution = 0.2, batch_correct = FALSE) #> NULL"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess Single Cell Object — sce_preprocess","title":"Preprocess Single Cell Object — sce_preprocess","text":"Performs standard pre-processing workflow scRNA-seq data","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess Single Cell Object — sce_preprocess","text":"","code":"sce_preprocess(   object,   scale = TRUE,   normalize = TRUE,   features = NULL,   legacy_settings = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess Single Cell Object — sce_preprocess","text":"object Assay use scale Perform linear transformation 'Scaling' normalize Perform normalization features Identify highly variable features legacy_settings Use legacy settings ... extra args passed scaling functions","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess Single Cell Object — sce_preprocess","text":"preprocessed SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SingleCellExperiment Pipeline — sce_process","title":"Run SingleCellExperiment Pipeline — sce_process","text":"functions allows preprocess, cluster reduce dimensions one SingleCellExperiment object.","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SingleCellExperiment Pipeline — sce_process","text":"","code":"sce_process(   object,   experiment = \"gene\",   resolution = 0.6,   reduction = \"PCA\",   organism = \"human\",   process = TRUE,   ... )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SingleCellExperiment Pipeline — sce_process","text":"object SingleCellExperiment object experiment Assay interest SingleCellExperiment object resolution Resolution clustering cells. Default set 0.6. reduction Dimensional reduction object organism Organism process whether run dimensional reduction clustering ... extra parameters passed internal functions","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run SingleCellExperiment Pipeline — sce_process","text":"processed SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run SingleCellExperiment Pipeline — sce_process","text":"","code":"data(tiny_sce) sce_process(tiny_sce, process = FALSE) #> class: SingleCellExperiment  #> dim: 10 883  #> metadata(2): markers experiment #> assays(3): counts logcounts scaledata #> rownames(10): PDE6H GUCA1A ... NRL FOS #> rowData names(0): #> colnames(883): ds20181001-0001 ds20181001-0002 ... ds20181001-1039 #>   ds20181001-1040 #> colData names(49): orig.ident nCount_gene ... nFeature_transcript ident #> reducedDimNames(2): PCA UMAP #> mainExpName: gene #> altExpNames(1): transcript"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensional Reduction — sce_reduce_dimensions","title":"Dimensional Reduction — sce_reduce_dimensions","text":"Run PCA, TSNE UMAP singlecell objects perplexity bigger 3 * perplexity < nrow(X) - 1, see details interpretation","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensional Reduction — sce_reduce_dimensions","text":"","code":"sce_reduce_dimensions(object, experiment = \"gene\", ...)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensional Reduction — sce_reduce_dimensions","text":"object SingleCellExperiment object experiment Experiment interest processed ... Extra parameters passed sce_reduce_dimensions","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/sce_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensional Reduction — sce_reduce_dimensions","text":"SingleCellExperiment object embeddings","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_colData.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cell metadata — set_colData","title":"Set cell metadata — set_colData","text":"Set cell metadata given object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_colData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cell metadata — set_colData","text":"","code":"set_colData(object, meta)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_colData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cell metadata — set_colData","text":"object SingleCellExperiment object meta dataframe containing object metadata","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_colData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set cell metadata — set_colData","text":"SingleCellExperiment object new colData","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_colData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set cell metadata — set_colData","text":"","code":"data(small_example_dataset) new_meta <- data.frame(row.names = colnames(small_example_dataset)) new_meta$example <- \"example\" set_colData(small_example_dataset, new_meta) #> class: SingleCellExperiment  #> dim: 1000 200  #> metadata(1): markers #> assays(2): counts logcounts #> rownames(1000): Gene_0001 Gene_0002 ... Gene_0999 Gene_1000 #> rowData names(0): #> colnames(200): Cell_001 Cell_002 ... Cell_199 Cell_200 #> colData names(1): example #> reducedDimNames(3): PCA TSNE UMAP #> mainExpName: gene #> altExpNames(1): Spikes"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_feature_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Feature Types — set_feature_type","title":"Set Feature Types — set_feature_type","text":"Set Feature Types","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_feature_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Feature Types — set_feature_type","text":"","code":"set_feature_type(object, feature_type)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_feature_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Feature Types — set_feature_type","text":"object SingleCellExperiment object feature_type feature type","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_feature_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Feature Types — set_feature_type","text":"SingleCellExperiment object assigned feature type","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/set_feature_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Feature Types — set_feature_type","text":"","code":"data(small_example_dataset) set_feature_type(small_example_dataset, \"transcript\") #> class: SingleCellExperiment  #> dim: 1000 200  #> metadata(1): markers #> assays(2): counts logcounts #> rownames(1000): Gene_0001 Gene_0002 ... Gene_0999 Gene_1000 #> rowData names(0): #> colnames(200): Cell_001 Cell_002 ... Cell_199 Cell_200 #> colData names(9): Mutation_Status Cell_Cycle ... gene_snn_res.0.8 #>   gene_snn_res.1 #> reducedDimNames(3): PCA TSNE UMAP #> mainExpName: gene #> altExpNames(1): Spikes"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/small_example_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Small example SingleCellExperiment — small_example_dataset","title":"Small example SingleCellExperiment — small_example_dataset","text":"created scuttle::mockSCE","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/small_example_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small example SingleCellExperiment — small_example_dataset","text":"","code":"small_example_dataset"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/small_example_dataset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Small example SingleCellExperiment — small_example_dataset","text":"SingleCellExperiment 200 cells 1000 genes","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/small_example_dataset.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Small example SingleCellExperiment — small_example_dataset","text":"scuttle::mockSCE","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/splitByCol.html","id":null,"dir":"Reference","previous_headings":"","what":"Split SingleCellExperiment by colData variable — splitByCol","title":"Split SingleCellExperiment by colData variable — splitByCol","text":"Split SingleCellExperiment colData variable","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/splitByCol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split SingleCellExperiment by colData variable — splitByCol","text":"","code":"splitByCol(x, f = \"batch\")"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/splitByCol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split SingleCellExperiment by colData variable — splitByCol","text":"x SingleCellExperiment object f colData variable string","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/splitByCol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split SingleCellExperiment by colData variable — splitByCol","text":"list singlecellexperiments name colData value","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/splitByCol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split SingleCellExperiment by colData variable — splitByCol","text":"","code":"data(small_example_dataset) splitByCol(small_example_dataset, \"batch\") #> named list()"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/stash_marker_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Stash Marker Genes in a SingleCellExperiment Object — stash_marker_features","title":"Stash Marker Genes in a SingleCellExperiment Object — stash_marker_features","text":"Marker Genes stored object metadata markers","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/stash_marker_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stash Marker Genes in a SingleCellExperiment Object — stash_marker_features","text":"","code":"stash_marker_features(   object,   group_by,   experiment = \"gene\",   top_n = 200,   p_val_cutoff = 0.5 )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/stash_marker_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stash Marker Genes in a SingleCellExperiment Object — stash_marker_features","text":"object object group_by metadata variable group experiment experiment use top_n Use top n genes, Default 200 p_val_cutoff p value cut-, Default value \"0.5\"","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/stash_marker_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stash Marker Genes in a SingleCellExperiment Object — stash_marker_features","text":"SingleCellExperiment object marker genes","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/subset_by_colData.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset by new colData — subset_by_colData","title":"Subset by new colData — subset_by_colData","text":"Subset object using new colData","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/subset_by_colData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset by new colData — subset_by_colData","text":"","code":"subset_by_colData(colData_path, object)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/subset_by_colData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset by new colData — subset_by_colData","text":"colData_path Path new colData object object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/subset_by_colData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset by new colData — subset_by_colData","text":"SingleCellExperiment object","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/tiny_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Tiny example SingleCellExperiment — tiny_sce","title":"Tiny example SingleCellExperiment — tiny_sce","text":"subset NRL chevreuldata::human_gene_transcript_sce()","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/tiny_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tiny example SingleCellExperiment — tiny_sce","text":"","code":"tiny_sce"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/tiny_sce.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tiny example SingleCellExperiment — tiny_sce","text":"SingleCellExperiment expression NRL gene NRL transripts","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/tiny_sce.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tiny example SingleCellExperiment — tiny_sce","text":"chevreuldata::human_gene_transcript_sce()","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/transcripts_to_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"Convert ensembl transcript ids hgnc gene symbols","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/transcripts_to_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"","code":"transcripts_to_genes(transcripts)"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/transcripts_to_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"transcripts human transcripts","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/transcripts_to_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"vector gene symbols","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/transcripts_to_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"","code":"NRL_transcripts_hs <- c(\"ENST00000359842\", \"ENST00000470566\", \"ENST00000465764\")  transcripts_to_genes(transcripts = NRL_transcripts_hs) #> [1] \"RXRG\" \"RXRG\" \"RXRG\""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/update_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a database of chevreul projects — update_project_db","title":"Update a database of chevreul projects — update_project_db","text":"Add new/update existing projects database recursing fully","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/update_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a database of chevreul projects — update_project_db","text":"","code":"update_project_db(   projects_dir = NULL,   cache_location = \"~/.cache/chevreul\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/update_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a database of chevreul projects — update_project_db","text":"projects_dir project directory updated cache_location Path cache \"~/.cache/chevreul\" sqlite_db sqlite db verbose print messages","code":""},{"path":"https://cobriniklab.github.io/chevreulProcess/reference/update_project_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a database of chevreul projects — update_project_db","text":"sqlite database SingleCellExperiment objects","code":""}]
